[{"C:\\Users\\Admin\\OneDrive\\Máy tính\\React JS\\POS\\src\\index.js":"1","C:\\Users\\Admin\\OneDrive\\Máy tính\\React JS\\POS\\src\\App.js":"2","C:\\Users\\Admin\\OneDrive\\Máy tính\\React JS\\POS\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\OneDrive\\Máy tính\\React JS\\POS\\src\\screens\\MenuSection.js":"4","C:\\Users\\Admin\\OneDrive\\Máy tính\\React JS\\POS\\src\\comps\\Item.js":"5","C:\\Users\\Admin\\OneDrive\\Máy tính\\React JS\\POS\\src\\firebase\\config.js":"6","C:\\Users\\Admin\\OneDrive\\Máy tính\\React JS\\POS\\src\\comps\\Data.js":"7","C:\\Users\\Admin\\OneDrive\\Máy tính\\React JS\\POS\\src\\comps\\DishModel.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":3158,"mtime":1636178552089,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":25795,"mtime":1636183463388,"results":"13","hashOfConfig":"10"},{"size":315,"mtime":1635859424857,"results":"14","hashOfConfig":"10"},{"size":566,"mtime":1635904810338,"results":"15","hashOfConfig":"10"},{"size":4225,"mtime":1636043076782,"results":"16","hashOfConfig":"10"},{"size":985,"mtime":1636183211405,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"78kegc",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"C:\\Users\\Admin\\OneDrive\\Máy tính\\React JS\\POS\\src\\index.js",[],["38","39"],"C:\\Users\\Admin\\OneDrive\\Máy tính\\React JS\\POS\\src\\App.js",["40","41","42","43","44","45","46","47","48","49","50","51"],"import logo from './logo.svg';\nimport './App.css';\nimport Carousel from 'react-elastic-carousel';\n// import styles from './App.css'\nimport Item from './comps/Item';\nimport { isValidTimestamp } from '@firebase/util';\nimport MenuSection from './screens/MenuSection';\nimport { db } from './firebase/config';\nimport { useEffect, useState } from 'react';\nimport { collection, getDoc, getDocs, doc, onSnapshot } from '@firebase/firestore';\nimport {data} from './comps/Data';\nimport bg from './pictures/POS-background.png';\n\nfunction App() {\n  const [refresh, setRefresh] = useState(0);\n\n  // const [menus, setMenus] = useState([]);\n  // const menusRef = collection(db, 'menus');\n\n  // useEffect(\n  //   () => {\n  //     const getMenus = async () => {\n  //       const data = await getDocs(menusRef);\n\n  //         data.docs.forEach(\n  //           menu => {\n\n  //             const getDishes = async () => {\n  //               var dishesRef = collection(db, 'menus' + '/' + menu.id + '/' + 'dishes');\n  //               const dishes = await getDocs(dishesRef);\n\n  //               console.log('Adding at menu id', menu.id);\n  //               const dishesList = dishes.docs.map( dish => ({...dish.data(), id: dish.id}));\n\n  //               setMenus(\n  //                 (prevList) => ([...prevList, {...menu.data(), id: menu.id, dishes: dishesList}])\n  //               )\n  //             }\n\n  //             getDishes();\n  //           }\n  //         )\n\n  //         // setRefreshDataCount((prevCount) => prevCount + 1)\n  //     }\n\n  //     getMenus();\n  //     console.log('App call', refreshDataCount);\n\n  //     // getMenus().then(\n  //     //   () => {\n  //     //     console.log('In App:', menus);\n  //     //   }\n  //     // ).catch(\n  //     //   (e) => console.log('Error in loading data:', e)\n  //     // );      \n  //   }\n  // , [])\n\n\n  // const [docs ,setDocs] = useState([]);\n//   const unsub = onSnapshot(doc(db, \"cities\", \"SF\"), (doc) => {\n//     setDocs([...docs, doc.data(), doc.id]);\n//     console.log(\"Current data: \", doc.data());\n// });\n\n  return (\n    // Learn Listen for change\n    // <div>\n    //   <text> Learning is god! </text>\n\n    // </div>\n\n    // App run\n    <div style={{backgroundImage: `url(${bg})`, height: '50%', backgroundSize: '100%'}}>\n      <MenuSection \n      refresh={refresh}\n      setRefresh={setRefresh}\n      // menusList={menus}\n      // count={refreshDataCount}\n      // setCount={setRefreshDataCount}\n    />\n\n      {/* <img src='https://cdn.theforkmanager.com/static/body-images/the-fork-10-desserts-ideas-to-add-to-your-menu-8.jpg'/> */}\n    </div>\n\n    // <div>\n    //   {\n        \n    //   menusList.map(\n    //     menu => {\n    //       console.log(menusList);\n    //       console.log('The menu with id', menu.id, ':', menu);\n\n    //       return (\n    //           <div>\n    //           <text> {menu.id}: {menu.name} </text>\n    //           {\n    //             menu.dishes.map(\n    //               dish => (<h1> {dish.id}: {dish.name}, {dish.price} </h1>)\n    //             )\n    //           }\n    //         </div>\n    //       )\n    //     }\n    //   )}\n    // </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Admin\\OneDrive\\Máy tính\\React JS\\POS\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\OneDrive\\Máy tính\\React JS\\POS\\src\\screens\\MenuSection.js",["52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99"],"import React, {Component} from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport { db } from '../firebase/config';\r\nimport {getDoc, collection, getDocs, doc} from 'firebase/firestore';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport { CONSTANTS, isValidTimestamp } from '@firebase/util';\r\nimport {AiFillMinusSquare, AiFillPlusSquare, AiOutlineHome, AiOutlineReload, AiOutlineShoppingCart} from 'react-icons/ai';\r\nimport cupcake from '../pictures/cupcake.jpg'\r\nimport { cleanup } from '@testing-library/react';\r\nimport {data} from '../comps/Data';\r\nimport {FaShoppingCart, FaSquare} from 'react-icons/fa';\r\nimport bg from '../pictures/POS-background.png';\r\nimport {TiDelete} from 'react-icons/ti';\r\nimport DishModel from '../comps/DishModel';\r\n\r\n// import {motion} from 'framer-motion';\r\n\r\nfunction MenuSection({setRefresh, refresh}) {\r\n    const homepageIcon = 'https://cdn-icons.flaticon.com/png/512/2932/premium/2932143.png?token=exp=1636136139~hmac=818881b59fd1a0251d8a6a4a49eef751';\r\n\r\n    const menusRef = collection(db, 'menus');\r\n    const [menus, setMenus] = useState([]);\r\n    const [selectedMenuId, setSelectedMenuId] = useState('');\r\n    const [refreshCount, setRefreshCount] = useState(0);\r\n    const [refreshDataCount, setRefreshDataCount] = useState(0);\r\n    const [selectedMenuName, setSelectedMenuName] = useState('');\r\n    const [selectedDish, setSelectedDish] = useState(null);\r\n\r\n    const [selectedDishes, setSelectedDishes] = useState([]);\r\n    const [dishBars, setDishBars] = useState([]);\r\n    const [isMenuItemClicked, setIsMenuItemClicked] = useState(false);\r\n    // const [numbers, setNumbers ] = useState([0,1,2,3,4,5,6,7,8,9, 10, 11, 12]);\r\n    const [boughtList, setBoughtList] = useState([]);\r\n\r\n    const [totalAmount, setTotalAmout] = useState(0);\r\n    const [tax, setTax] = useState(0);\r\n    const [cost, setCost] = useState(0);\r\n    const N = 3;\r\n\r\n    const [isPaid, setIsPaid] = useState(null);\r\n    \r\n\r\n\r\n  useEffect(\r\n    () => {\r\n\r\n        if (menus.length == 0) {\r\n            const getMenus = async () => {\r\n                const data = await getDocs(menusRef);\r\n    \r\n                data.docs.forEach(\r\n                    menu => {\r\n    \r\n                    const getDishes = async () => {\r\n                        var dishesRef = collection(db, 'menus' + '/' + menu.id + '/' + 'dishes');\r\n                        const dishes = await getDocs(dishesRef);\r\n    \r\n                        console.log('Adding at menu id', menu.id);\r\n                        const dishesList = dishes.docs.map( dish => ({...dish.data(), id: dish.id}));\r\n    \r\n                        setMenus(\r\n                        (prevList) => ([...prevList, {...menu.data(), id: menu.id, dishes: dishesList}])\r\n                        )\r\n                    }\r\n    \r\n                    getDishes();\r\n                    }\r\n                )\r\n            }\r\n    \r\n            console.log('Menu section re-render.');\r\n    \r\n            getMenus();\r\n        }\r\n        // setDishBars( cutList(selectedDishes) );\r\n        \r\n    }\r\n  , [refreshCount])\r\n\r\n  const [refreshCurrentSelectedMenuCount, setRefreshCurrentSelectedMenuCount] = useState(0);\r\n\r\n  useEffect(\r\n      () => {\r\n        setDishBars( cutList(selectedDishes) );\r\n      }\r\n  , [refreshCurrentSelectedMenuCount])\r\n\r\n    // const menus = {menus};\r\n\r\n    function PaymentModel() {\r\n        const handleClick = (e) => {\r\n            if (e.target.classList.contains('PaymentModal-backdrop')) {\r\n                setIsPaid(false);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='PaymentModal-backdrop'\r\n                onClick={handleClick}\r\n            >\r\n                <div className='PaymentModal-backdrop-container'>\r\n                    <text style={{fontSize: 28, fontStyle: 'italic'}}> Thank you for having us served you our best. Have a delicious dine. You're always welcome here.</text>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    function showMenu(){\r\n        return (\r\n            <div>\r\n            {menus.map(\r\n                menu => {\r\n                    return (\r\n                        <div>\r\n                            <h1> {menu.id}: {menu.name} </h1>\r\n                            {menu.dishes.map(\r\n                                dish => <h2> {dish.name}: {dish.price}</h2>\r\n                            )}\r\n                        </div>\r\n                    )\r\n                }\r\n            )}\r\n        </div>\r\n        )\r\n    }\r\n\r\n    function MenuItem({id, name, picture}){\r\n        const [isClicked, setIsClicked] = useState(false);\r\n\r\n        const handleMenuItemClicked = () => {\r\n            setIsClicked(!isClicked);\r\n\r\n            // Set the current select menu base on id.\r\n            setSelectedMenuId(id);\r\n            console.log(selectedMenuId);\r\n            \r\n            // Get the list of dishes from the selected menu\r\n            // IMPORTANT\r\n            // const dishes = data().at(id - 1).dishes;\r\n\r\n            const menuWithId = menus.find( menu => {return menu.id == id;})\r\n            console.log('Selected menu: ', menuWithId);\r\n            console.log('This menu contains: ', menuWithId.dishes);\r\n            setSelectedMenuName(menuWithId.name);\r\n            // Input dishes from the selected menu to render them in the menu dish.\r\n            // setSelectedDishes(dishes.map(\r\n            //     dish => ({...dish, fromMenuId: id})\r\n            // ));\r\n            // console.log(selectedDishes);\r\n\r\n            setSelectedDishes(menuWithId.dishes.map(\r\n                dish => (dish)\r\n            ))\r\n\r\n            // setDishBars( cutList(selectedDishes) );\r\n\r\n            \r\n            // Refresh the list\r\n            // setRefreshCount(refreshCount + 1);\r\n            setRefreshCurrentSelectedMenuCount(refreshCurrentSelectedMenuCount + 1);\r\n        }\r\n\r\n        const [isHovering, setIsHovering] = useState(false);\r\n\r\n        return (\r\n            <div className='MenuItem-container'\r\n                style={{\r\n                backgroundColor: (isHovering || selectedMenuId == id) ? '#2C3A65' : 'white',\r\n                opacity: isHovering ? '1' : '0.8'\r\n                }}\r\n                onClick={handleMenuItemClicked}\r\n                onMouseEnter={() => setIsHovering(!isHovering)}\r\n                onMouseLeave={() => setIsHovering(!isHovering)}\r\n            >\r\n                <img src={picture} style={{width: 100, height: 100, borderRadius: 20}}/>\r\n                {/* <text> {id} </text> */}\r\n                <text style={{fontWeight: 'bold', fontSize: 18, marginTop: 5}}> {name} </text>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function DishItem({id, name, price, picture}){\r\n        const [isHovering, setIsHovering] = useState(false);\r\n\r\n        const handleClickBuyItem = () => {\r\n            const findAlreadyExistBoughtItem = boughtList.find( boughtItem => {return (boughtItem.id == id && boughtItem.fromMenuId == selectedMenuId)});\r\n\r\n            if (findAlreadyExistBoughtItem == undefined) {\r\n                const clickedItem = selectedDishes.find( (item) => {return item.id == id;})\r\n                setBoughtList([...boughtList, {...clickedItem, quantity: 1, fromMenuId: selectedMenuId}])\r\n            } else {\r\n                setBoughtList(\r\n                    boughtList.map(\r\n                        boughtItem => (boughtItem.id == id && boughtItem.fromMenuId == selectedMenuId) ? {...boughtItem, quantity: boughtItem.quantity + 1} : boughtItem\r\n                    )\r\n                )\r\n            }\r\n\r\n            console.log(\"The current bought list contains:\", boughtList);\r\n            setCost((prevAmount) => (parseFloat(prevAmount) + parseFloat(price)));\r\n            setTax( (prevAmount) => (prevAmount + (0.1) * parseFloat(price)));\r\n            setTotalAmout( (prevAmount) => (prevAmount + 1.1 * parseFloat(price)));\r\n\r\n            setIsHovering(true);\r\n        }\r\n\r\n        const handleClickedDishItemImage = () => {\r\n            setSelectedDish( selectedDishes.find( dish => {return dish.id == id}));\r\n        }\r\n        \r\n        return (\r\n            <div className='DishItem-container'\r\n                onMouseEnter={() => setIsHovering(true)}\r\n                onMouseLeave={() => setIsHovering(false)}\r\n            >\r\n                <div style={{borderTopLeftRadius:20, borderTopRightRadius: 20, height: '60%', width: '100%', display:'flex', justifyContent:'center', backgroundColor: isHovering ? '#2C3A65' : 'white', alignItems:'center'}}\r\n                    onClick={handleClickedDishItemImage}\r\n                >\r\n                    <img src={picture} alt={cupcake} style={{width: 150, height: 150, borderRadius: 30}}/>\r\n\r\n                </div>\r\n\r\n                <div style={{backgroundColor: 'white', borderBottomStyle: 'ridge', display:'flex', height: '20%', width: '80%', alignItems: 'center'}}>\r\n                    <text style={{fontWeight: 'bold'}}> {name} </text>\r\n                </div>\r\n\r\n                <div style={{alignItems:'center', backgroundColor: 'white', height: '20%', width: '80%', flexDirection: 'row', display: 'flex'}}>\r\n                    <div style={{width: '80%'}}>\r\n                        <text\r\n                            style={{fontSize: 24, color: 'red', fontWeight: 'bold'}}\r\n                        > {'$' + price} </text>\r\n                    </div>\r\n\r\n                    <div style={{width: '20%', backgroundColor: 'white', display: 'flex', justifyContent:'end', alignContent: 'center'}}>\r\n                        <div style={{borderRadius:10, display:'flex', backgroundColor: 'red', height: 35, width: 35, justifyContent:'center', alignItems:'center'}}\r\n                                onClick={handleClickBuyItem}\r\n                        >\r\n                            <AiOutlineShoppingCart\r\n                                \r\n                                color='white'\r\n                                size={28} \r\n                                style={{float: 'right'}}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function BoughtList({boughtList}){\r\n        return (\r\n            <div style={{backgroundColor: 'white'}}>\r\n                <Carousel\r\n                    itemsToShow={4}\r\n                    itemsToScroll={4}\r\n                    verticalMode={true}\r\n                    itemPadding={[10, 10]}\r\n                    showArrows={false}\r\n                    pagination={false}\r\n                >\r\n                    {boughtList.map(\r\n                        boughtItem => <BoughtItem fromMenuId={boughtItem.fromMenuId} quantity={boughtItem.quantity} id={boughtItem.id} name={boughtItem.name} price={boughtItem.price} image={boughtItem.img}/>\r\n                    )}\r\n                </Carousel>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function BoughtItem({fromMenuId, id, name, price, quantity, image}){\r\n        const handleClickAddItem = () => {\r\n            // var dishItem = boughtList.find( boughtItem => {return boughtItem.id == id});\r\n            \r\n            // setBoughtList(boughtList.filter( (boughtItem) => {return boughtItem.id != id}));\r\n            // setBoughtList([...boughtList, {}])\r\n\r\n            setBoughtList(\r\n                boughtList.map(\r\n                    boughtItem => boughtItem.id == id ? {...boughtItem, quantity: boughtItem.quantity + 1} : boughtItem\r\n                )\r\n            )\r\n            \r\n            setCost((prevAmount) => (parseFloat(prevAmount) + parseFloat(price)));\r\n            setTax( (prevAmount) => (prevAmount + (0.1) * parseFloat(price)));\r\n            setTotalAmout( (prevAmount) => (prevAmount + 1.1 * parseFloat(price)));\r\n            console.log(\"After buy more a new one\", boughtList);\r\n        }\r\n\r\n        const handleClickMinusItem = () => {\r\n            if (quantity == 1) {\r\n\r\n                setBoughtList(boughtList.filter( boughtItem => {\r\n                    // return (boughtItem.fromMenuId != selectedMenuId) || (boughtItem.fromMenuId == selectedMenuId && boughtItem.id != id)\r\n                    var x = boughtItem.id != id;\r\n                    var y = boughtItem.fromMenuId != fromMenuId;\r\n                    console.log(boughtItem.fromMenuId);\r\n                    console.log(fromMenuId);\r\n                    console.log('Condition X:', x);\r\n                    console.log('Condition Y:', y);\r\n\r\n                    console.log(boughtItem.fromMenuId);\r\n                    console.log(fromMenuId);\r\n\r\n                    return (boughtItem.id != id || boughtItem.fromMenuId != fromMenuId)\r\n                    ;}));\r\n            } else {\r\n                setBoughtList(\r\n                    boughtList.map(\r\n                        boughtItem => (boughtItem.id == id && boughtItem.fromMenuId == fromMenuId) ? {...boughtItem, quantity: boughtItem.quantity - 1} : boughtItem\r\n                    )\r\n                )\r\n            }\r\n\r\n            setCost((prevAmount) => (parseFloat(prevAmount) - parseFloat(price)));\r\n            setTax( (prevAmount) => (prevAmount - (0.1) * parseFloat(price)));\r\n            setTotalAmout( (prevAmount) => (totalAmount - 1.1 * parseFloat(price)));\r\n            console.log('After substract a time', boughtList);\r\n        }\r\n\r\n        const handleClickDeleteItem = () => {\r\n            setBoughtList(\r\n                boughtList.filter( boughtItem => {return boughtItem.id != id;})\r\n            )\r\n\r\n            setCost((prevAmount) => (parseFloat(prevAmount) - quantity * parseFloat(price)));\r\n            setTax( (prevAmount) => (prevAmount - quantity * (0.1) * parseFloat(price)));\r\n            setTotalAmout( (prevAmount) => (totalAmount - quantity * 1.1 * parseFloat(price)));\r\n        }\r\n        return(\r\n            <div style={{borderColor: 'white', height: 100, width: '100%', borderStyle: 'ridge',backgroundColor: 'white', flexDirection:'row', display:'flex', padding: 10, borderRadius: 20\r\n            , animationName: 'example', animationDuration: '4s'\r\n            }}>\r\n                <div style={{height: '100%', width: '30%', display: 'flex', justifyContent: 'center', alignItems :'center'}}>\r\n                    <img src={image} alt={cupcake} style={{height: 100, width: 100, borderRadius:20}} />\r\n                </div>\r\n                \r\n                <div style={{width: '70%', backgroundColor:'white', paddingLeft: 5, paddingRight: 5}}>\r\n                    <div style={{backgroundColor: 'white', display: 'flex', flexDirection: 'row'}}>\r\n                        <text style={{fontWeight: 'bold', backgroundColor: 'white', width: '90%'}}> {name} </text>\r\n                        <div style={{float: 'right'}}>\r\n                            <TiDelete\r\n                                color='red'\r\n                                style={{alignSelf:'end'}}\r\n                                size={36}\r\n                                onClick={handleClickDeleteItem}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div style={{marginTop: 20, backgroundColor: 'white', width: '100%', display: 'flex'}}>\r\n                        <AiFillMinusSquare size={40}\r\n                            color='gray'\r\n                            onClick={handleClickMinusItem}\r\n                        />\r\n                        <div style={{width: '30%', justifyContent:'center', alignItems:'center', display: 'flex'}}>\r\n                            <text style={{fontSize: 20, fontWeight: 'bold'}}> {quantity} </text>\r\n                        </div>\r\n                        <AiFillPlusSquare size={40}\r\n                            color='tomato'\r\n                            onClick={handleClickAddItem}\r\n                        />\r\n                        <div style={{width: '70%', justifyContent:'end', alignItems:'center', display: 'flex'}}>\r\n                        <text style={{color: 'red', fontWeight: 'bold', fontSize:30}}> $ {price * quantity} </text>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const cutList = (list) => {\r\n        var array = [];\r\n        const numOfDishes = list.length;\r\n\r\n        for(var i = 0; i<numOfDishes;) {\r\n            if (numOfDishes - i >= 3) {\r\n                array.push([list.at(i), list.at(i + 1), list.at(i + 2)])\r\n                i += 3;\r\n            } else if (numOfDishes - i >= 2) {\r\n                array.push([list.at(i), list.at(i + 1)])\r\n                i += 2;\r\n            } else {\r\n                array.push([list.at(i)])\r\n                i += 1;\r\n            }\r\n        }\r\n\r\n        console.log('Cutted list: ', array);\r\n        return array;\r\n    }\r\n\r\n    const handleClickPayment = () => {\r\n        const billDesc = {\r\n            cost: cost,\r\n            tax: tax,\r\n            totalAmount: totalAmount,\r\n            boughtItems: boughtList,\r\n            createdAt: new Date(),\r\n        }\r\n\r\n        setCost(0);\r\n        setTax(0);\r\n        setTotalAmout(0);\r\n        setBoughtList([]);\r\n\r\n        setIsPaid(true);\r\n    }\r\n\r\n    // useEffect(\r\n    //     () => {\r\n\r\n    //         setDishBars( cutList(selectedDishes) );\r\n\r\n    //     }, [refreshCount])\r\n\r\n    return (\r\n        <div className='MenuSection-container'>\r\n            {/* <img src={bg} alt={'Back ground'} style={{height: 100, width: 100}}/> */}\r\n\r\n            {/* Left-hand side section */}\r\n            <div className='MenuSection-menu'>\r\n\r\n                {/* Menu bar */}\r\n                <div className='MenuSection-menu-bar'>\r\n                    <div className='MenuSection-menu-bar-home'>\r\n                        {/* <AiOutlineHome size={50} color={'white'}\r\n                        /> */}\r\n                        <img src={homepageIcon} style={{width: 50, height: 50}} />\r\n                    </div>\r\n\r\n                    <h2 style={{marginLeft: 20, fontWeight: 'bold'}}> Homepage </h2>\r\n\r\n                    {/* <div style={{width: '80%', justifyContent: 'end', display: 'flex', marginLeft: 60}}>\r\n                        <div className='MenuSection-menu-bar-reload'>\r\n                            <AiOutlineReload size={50} color={'white'}\r\n                            />\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n\r\n                {/* Menu item carousel */}\r\n                <div className='MenuSection-menu-item'>\r\n                    {/* <text> Menu item </text> */}\r\n                    <Carousel\r\n                        itemsToShow={3}\r\n                        itemsToScroll={1}\r\n                        // pagination={false}\r\n                        // enableTilt={true}\r\n                        // preventDefaultTouchmoveEvent={true} \r\n                        showArrows={true}\r\n                        // renderPagination={myPagnition}\r\n                        // renderArrow={myArrow}\r\n                        children={menus.map( item => <MenuItem id={item.id} name={item.name} picture={item.img} />)}\r\n                    >\r\n                        {/* <MenuItem name='A' picture={cupcake}/>\r\n                        <MenuItem name='B' picture={cupcake}/>\r\n                        <MenuItem name='C' picture={cupcake}/>\r\n                        <MenuItem name='D' picture={cupcake}/>\r\n                        <MenuItem name='E' picture={cupcake}/>\r\n                        <MenuItem name='F' picture={cupcake}/>\r\n                        <MenuItem name='G' picture={cupcake}/>\r\n                        <MenuItem name='H' picture={cupcake}/>\r\n                        <MenuItem name='I' picture={cupcake}/>\r\n                        <MenuItem name='J' picture={cupcake}/>   */}\r\n\r\n                    </Carousel>\r\n\r\n                </div>\r\n\r\n                {/* Dish item carousel */}\r\n                <div className='MenuSection-menu-dish'>\r\n\r\n                    <div className='MenuSection-menu-dish-title'>\r\n                        <div style={{borderBottomStyle:'inset', width: '45%', height: 20, marginLeft: 15, marginLeft: 15}}></div>\r\n                        \r\n                        <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\r\n                            <text style={{fontWeight: 'bold', fontSize: 28, color: 'black', fontStyle: 'oblique'}}>\r\n                                {/* {menus.at(selectedMenuId - 1).name} */}\r\n                                {selectedMenuName == '' ? (<div> </div>) : selectedMenuName}\r\n                            </text>\r\n                        </div>\r\n\r\n                        <div style={{borderBottomStyle:'inset', width: '45%', height: 20, marginRight: 15}}></div>\r\n                    </div>\r\n                    \r\n                    {selectedMenuId != '' ? (\r\n                        <div className='MenuSection-menu-dish-item'>\r\n                        <Carousel\r\n                            itemsToShow={2}\r\n                            verticalMode={true}\r\n                            // pagination={false}\r\n                            children={dishBars.map(\r\n                                dishBar => (\r\n                                    <Carousel\r\n                                    key={dishBar.id}\r\n                                    enableSwipe={false}\r\n                                    showArrows={false}\r\n                                    itemsToShow={3}\r\n                                    pagination={false}\r\n                                    showEmptySlots\r\n                                    >\r\n                                        {dishBar.map(\r\n                                            dish => <DishItem fromMenuId={dishBar.id} key={dish.id} id={dish.id} name={dish.name} price={dish.price} picture={dish.img}/>\r\n                                        )}\r\n                                    </Carousel>\r\n                                )\r\n                            )}\r\n                            itemPadding={[15, 15]}\r\n                            showArrows={false}\r\n                        >\r\n                        </Carousel>\r\n                    </div>\r\n                    ) : (\r\n                        <div>\r\n\r\n                        </div>\r\n                    )}\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            {/* Right-hand side section */}\r\n            <div className='MenuSection-cart'>\r\n                <div style={{height: '10%', backgroundColor: 'white', alignItems: 'center', display: 'flex', paddingLeft: 10, paddingRight: 10}}>\r\n                    <FaShoppingCart color='tomato' size={50} />\r\n                    <text style={{marginLeft: 20, color: 'tomato', fontWeight: 'bold', fontSize: 28}}>Your cart ({boughtList.length})</text>\r\n                </div>\r\n\r\n                <div style={{height: '60%', flexDirection:'column', display: 'flex', backgroundColor: 'white', borderTopStyle: 'ridge', borderBottomStyle: 'ridge'}}>\r\n                    {boughtList.length == 0 ? (\r\n                        <div style={{height: '100%', display:'flex', justifyContent: 'center', alignItems:'center', fontSize: 20}}>\r\n                                <h5>You have not chose any dish yet.</h5>\r\n                                <h5>Let's fill up your cart!</h5>\r\n                        </div>\r\n                    ): (\r\n                        <BoughtList boughtList={boughtList}/>\r\n                    )}\r\n                </div>\r\n\r\n                <div style={{height:'29.3%', backgroundColor: 'white', paddingLeft: 10, paddingRight: 10}}>\r\n                    <div style={{height: '60%', backgroundColor: 'white', display: 'flex', flexDirection:'row', paddingLeft: 10, paddingRight: 10}}>\r\n                        <div style={{width: '50%', backgroundColor: 'white', display: 'flex', flexDirection: 'column'}}>\r\n                            <text style={{backgroundColor: 'white', fontSize: 22, fontWeight: 'bold'}}> Cost </text>\r\n                            <text style={{backgroundColor: 'white', fontSize: 22, fontWeight: 'bold', marginTop: 50}}> Total </text>\r\n                        </div>\r\n                        \r\n                        \r\n                        \r\n                        <div style={{width: '50%', flexDirection: 'column', display: 'flex', alignItems:'end'}}>\r\n                            <text style={{color: 'tomato', fontSize: 35, fontWeight: 'bold'}}> $ {Math.abs(cost.toFixed(2))} </text>\r\n                            <text style={{backgroundColor: 'white', fontSize: 15, fontWeight: 'bold'}}> ( Tax 10%: {Math.abs(tax.toFixed(2))} )  </text>\r\n                            <text style={{color: 'tomato', fontSize: 35, fontWeight: 'bold'}}> $ {Math.abs(totalAmount.toFixed(2))} </text>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{height: '30%', backgroundColor: 'white'}}>\r\n                        <button style={{width: '100%', height: '100%', backgroundColor: 'red', borderRadius: 20}}\r\n                            onClick={handleClickPayment}\r\n                        >\r\n                            <h1 style={{color: 'white'}}> PAYMENT </h1>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Open the backdrop for dish item */}\r\n            { \r\n                selectedDish && \r\n                <DishModel \r\n                    selectedImg={selectedDish.img} \r\n                    setSelectedImg={setSelectedDish} \r\n                    name={selectedDish.name}\r\n                    price={selectedDish.price}\r\n                />\r\n            }\r\n\r\n            {/* Open the backdrop for payment */}\r\n            {\r\n                isPaid && \r\n                <PaymentModel />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuSection;\r\n","C:\\Users\\Admin\\OneDrive\\Máy tính\\React JS\\POS\\src\\comps\\Item.js",[],"C:\\Users\\Admin\\OneDrive\\Máy tính\\React JS\\POS\\src\\firebase\\config.js",[],"C:\\Users\\Admin\\OneDrive\\Máy tính\\React JS\\POS\\src\\comps\\Data.js",[],"C:\\Users\\Admin\\OneDrive\\Máy tính\\React JS\\POS\\src\\comps\\DishModel.js",["100"],"import React from 'react'\r\nimport '../App.css';\r\n\r\nfunction DishModel({selectedImg, setSelectedImg, name, price}) {\r\n    const handleClick = (e) => {\r\n        if (e.target.classList.contains('DishItem-backdrop')){\r\n            setSelectedImg(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='DishItem-backdrop' onClick={handleClick}>\r\n            <div className='DishItem-backdrop-container'>\r\n                <div style={{display: 'flex', flexDirection: 'row', height: '70%',alignItems:'center' ,justifyContent: 'space-around'}}>\r\n                    <text style={{width: '40%', fontSize: 24, fontStyle: 'italic', fontWeight: 'bold'}}> {name} </text>\r\n                    <img src={selectedImg} alt='Picture is not available'/>\r\n                </div>\r\n\r\n                <div>\r\n                    <text> [Description of the dish will be written here] </text>\r\n                </div>  \r\n            </div>       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DishModel\r\n",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":12},{"ruleId":"105","severity":1,"message":"109","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":16},{"ruleId":"105","severity":1,"message":"110","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":12},{"ruleId":"105","severity":1,"message":"111","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":26},{"ruleId":"105","severity":1,"message":"112","line":8,"column":10,"nodeType":"107","messageId":"108","endLine":8,"endColumn":12},{"ruleId":"105","severity":1,"message":"113","line":9,"column":10,"nodeType":"107","messageId":"108","endLine":9,"endColumn":19},{"ruleId":"105","severity":1,"message":"114","line":10,"column":10,"nodeType":"107","messageId":"108","endLine":10,"endColumn":20},{"ruleId":"105","severity":1,"message":"115","line":10,"column":22,"nodeType":"107","messageId":"108","endLine":10,"endColumn":28},{"ruleId":"105","severity":1,"message":"116","line":10,"column":30,"nodeType":"107","messageId":"108","endLine":10,"endColumn":37},{"ruleId":"105","severity":1,"message":"117","line":10,"column":39,"nodeType":"107","messageId":"108","endLine":10,"endColumn":42},{"ruleId":"105","severity":1,"message":"118","line":10,"column":44,"nodeType":"107","messageId":"108","endLine":10,"endColumn":54},{"ruleId":"105","severity":1,"message":"119","line":11,"column":9,"nodeType":"107","messageId":"108","endLine":11,"endColumn":13},{"ruleId":"105","severity":1,"message":"120","line":1,"column":16,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"115","line":4,"column":9,"nodeType":"107","messageId":"108","endLine":4,"endColumn":15},{"ruleId":"105","severity":1,"message":"117","line":4,"column":38,"nodeType":"107","messageId":"108","endLine":4,"endColumn":41},{"ruleId":"105","severity":1,"message":"121","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":19},{"ruleId":"105","severity":1,"message":"111","line":6,"column":21,"nodeType":"107","messageId":"108","endLine":6,"endColumn":37},{"ruleId":"105","severity":1,"message":"122","line":7,"column":46,"nodeType":"107","messageId":"108","endLine":7,"endColumn":59},{"ruleId":"105","severity":1,"message":"123","line":7,"column":61,"nodeType":"107","messageId":"108","endLine":7,"endColumn":76},{"ruleId":"105","severity":1,"message":"124","line":9,"column":10,"nodeType":"107","messageId":"108","endLine":9,"endColumn":17},{"ruleId":"105","severity":1,"message":"119","line":10,"column":9,"nodeType":"107","messageId":"108","endLine":10,"endColumn":13},{"ruleId":"105","severity":1,"message":"125","line":11,"column":25,"nodeType":"107","messageId":"108","endLine":11,"endColumn":33},{"ruleId":"105","severity":1,"message":"126","line":12,"column":8,"nodeType":"107","messageId":"108","endLine":12,"endColumn":10},{"ruleId":"105","severity":1,"message":"127","line":24,"column":26,"nodeType":"107","messageId":"108","endLine":24,"endColumn":41},{"ruleId":"105","severity":1,"message":"128","line":25,"column":12,"nodeType":"107","messageId":"108","endLine":25,"endColumn":28},{"ruleId":"105","severity":1,"message":"129","line":25,"column":30,"nodeType":"107","messageId":"108","endLine":25,"endColumn":49},{"ruleId":"105","severity":1,"message":"130","line":31,"column":12,"nodeType":"107","messageId":"108","endLine":31,"endColumn":29},{"ruleId":"105","severity":1,"message":"131","line":31,"column":31,"nodeType":"107","messageId":"108","endLine":31,"endColumn":51},{"ruleId":"105","severity":1,"message":"132","line":38,"column":11,"nodeType":"107","messageId":"108","endLine":38,"endColumn":12},{"ruleId":"133","severity":1,"message":"134","line":47,"column":26,"nodeType":"135","messageId":"136","endLine":47,"endColumn":28},{"ruleId":"137","severity":1,"message":"138","line":55,"column":64,"nodeType":"135","messageId":"139","endLine":55,"endColumn":65},{"ruleId":"137","severity":1,"message":"138","line":55,"column":86,"nodeType":"135","messageId":"139","endLine":55,"endColumn":87},{"ruleId":"140","severity":1,"message":"141","line":78,"column":5,"nodeType":"142","endLine":78,"endColumn":19,"suggestions":"143"},{"ruleId":"140","severity":1,"message":"144","line":86,"column":5,"nodeType":"142","endLine":86,"endColumn":38,"suggestions":"145"},{"ruleId":"105","severity":1,"message":"146","line":108,"column":14,"nodeType":"107","messageId":"108","endLine":108,"endColumn":22},{"ruleId":"133","severity":1,"message":"134","line":141,"column":68,"nodeType":"135","messageId":"136","endLine":141,"endColumn":70},{"ruleId":"133","severity":1,"message":"134","line":168,"column":64,"nodeType":"135","messageId":"136","endLine":168,"endColumn":66},{"ruleId":"147","severity":1,"message":"148","line":175,"column":17,"nodeType":"149","endLine":175,"endColumn":89},{"ruleId":"133","severity":1,"message":"134","line":186,"column":102,"nodeType":"135","messageId":"136","endLine":186,"endColumn":104},{"ruleId":"133","severity":1,"message":"134","line":186,"column":133,"nodeType":"135","messageId":"136","endLine":186,"endColumn":135},{"ruleId":"133","severity":1,"message":"134","line":188,"column":44,"nodeType":"135","messageId":"136","endLine":188,"endColumn":46},{"ruleId":"133","severity":1,"message":"134","line":189,"column":84,"nodeType":"135","messageId":"136","endLine":189,"endColumn":86},{"ruleId":"133","severity":1,"message":"134","line":194,"column":54,"nodeType":"135","messageId":"136","endLine":194,"endColumn":56},{"ruleId":"133","severity":1,"message":"134","line":194,"column":85,"nodeType":"135","messageId":"136","endLine":194,"endColumn":87},{"ruleId":"133","severity":1,"message":"134","line":208,"column":75,"nodeType":"135","messageId":"136","endLine":208,"endColumn":77},{"ruleId":"133","severity":1,"message":"134","line":279,"column":49,"nodeType":"135","messageId":"136","endLine":279,"endColumn":51},{"ruleId":"133","severity":1,"message":"134","line":290,"column":26,"nodeType":"135","messageId":"136","endLine":290,"endColumn":28},{"ruleId":"133","severity":1,"message":"150","line":294,"column":43,"nodeType":"135","messageId":"136","endLine":294,"endColumn":45},{"ruleId":"133","severity":1,"message":"150","line":295,"column":51,"nodeType":"135","messageId":"136","endLine":295,"endColumn":53},{"ruleId":"133","severity":1,"message":"150","line":304,"column":43,"nodeType":"135","messageId":"136","endLine":304,"endColumn":45},{"ruleId":"133","severity":1,"message":"150","line":304,"column":74,"nodeType":"135","messageId":"136","endLine":304,"endColumn":76},{"ruleId":"133","severity":1,"message":"134","line":309,"column":54,"nodeType":"135","messageId":"136","endLine":309,"endColumn":56},{"ruleId":"133","severity":1,"message":"134","line":309,"column":85,"nodeType":"135","messageId":"136","endLine":309,"endColumn":87},{"ruleId":"133","severity":1,"message":"150","line":322,"column":72,"nodeType":"135","messageId":"136","endLine":322,"endColumn":74},{"ruleId":"105","severity":1,"message":"151","line":394,"column":15,"nodeType":"107","messageId":"108","endLine":394,"endColumn":23},{"ruleId":"147","severity":1,"message":"148","line":429,"column":25,"nodeType":"149","endLine":429,"endColumn":83},{"ruleId":"152","severity":1,"message":"153","line":475,"column":107,"nodeType":"154","messageId":"136","endLine":475,"endColumn":117},{"ruleId":"133","severity":1,"message":"134","line":480,"column":51,"nodeType":"135","messageId":"136","endLine":480,"endColumn":53},{"ruleId":"133","severity":1,"message":"150","line":487,"column":37,"nodeType":"135","messageId":"136","endLine":487,"endColumn":39},{"ruleId":"133","severity":1,"message":"134","line":531,"column":40,"nodeType":"135","messageId":"136","endLine":531,"endColumn":42},{"ruleId":"155","severity":1,"message":"156","line":16,"column":21,"nodeType":"149","endLine":16,"endColumn":76},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Carousel' is defined but never used.","'Item' is defined but never used.","'isValidTimestamp' is defined but never used.","'db' is defined but never used.","'useEffect' is defined but never used.","'collection' is defined but never used.","'getDoc' is defined but never used.","'getDocs' is defined but never used.","'doc' is defined but never used.","'onSnapshot' is defined but never used.","'data' is defined but never used.","'Component' is defined but never used.","'CONSTANTS' is defined but never used.","'AiOutlineHome' is defined but never used.","'AiOutlineReload' is defined but never used.","'cleanup' is defined but never used.","'FaSquare' is defined but never used.","'bg' is defined but never used.","'setRefreshCount' is assigned a value but never used.","'refreshDataCount' is assigned a value but never used.","'setRefreshDataCount' is assigned a value but never used.","'isMenuItemClicked' is assigned a value but never used.","'setIsMenuItemClicked' is assigned a value but never used.","'N' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'menus.length' and 'menusRef'. Either include them or remove the dependency array.","ArrayExpression",["159"],"React Hook useEffect has a missing dependency: 'selectedDishes'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDishBars' needs the current value of 'selectedDishes'.",["160"],"'showMenu' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","'billDesc' is assigned a value but never used.","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [menus.length, menusRef, refreshCount]",{"range":"165","text":"166"},"Update the dependencies array to be: [refreshCurrentSelectedMenuCount, selectedDishes]",{"range":"167","text":"168"},[3066,3080],"[menus.length, menusRef, refreshCount]",[3272,3305],"[refreshCurrentSelectedMenuCount, selectedDishes]"]