{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\React JS\\\\POS\\\\src\\\\contexts\\\\DataContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { collection, getDocs } from '@firebase/firestore';\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { db } from '../firebase/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\nexport function useData() {\n  _s();\n\n  return useContext(DataContext);\n}\n\n_s(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function DataProvider({\n  children\n}) {\n  _s2();\n\n  const [menus, setMenus] = useState([]);\n  const menusRef = collection(db, 'menus');\n  useEffect(() => {\n    const queryMenus = async () => {\n      const menusDocs = await getDocs(menusRef);\n      setMenus(menusDocs.docs.map(menu => {\n        const queryDishes = async () => {\n          const dishesRef = collection(db, 'menus' + '/' + menu.id + '/' + 'dishes');\n          const dishesDocs = await getDocs(dishesRef);\n          return dishesDocs.docs.map(dish => ({ ...dish.data(),\n            id: dish.id\n          }));\n        };\n\n        var list = [];\n        queryDishes().then(dishes => dishes.map(dish => list.push(dish))).catch(e => console.log('Error in reading dishes:', e.message));\n        return { ...menu.data(),\n          id: menu.id,\n          dishes: list\n        };\n      }));\n    };\n\n    queryMenus();\n    console.log('!', menus);\n  }, []);\n  const value = {\n    menus\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(DataProvider, \"ZqBfPGU9b+46GUhGJ+6CeHR+GYo=\");\n\n_c = DataProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Máy tính/React JS/POS/src/contexts/DataContext.js"],"names":["collection","getDocs","React","createContext","useContext","useEffect","useState","db","DataContext","useData","DataProvider","children","menus","setMenus","menusRef","queryMenus","menusDocs","docs","map","menu","queryDishes","dishesRef","id","dishesDocs","dish","data","list","then","dishes","push","catch","e","console","log","message","value"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,qBAApC;AACA,OAAOC,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,SAASC,EAAT,QAAmB,oBAAnB;;AAEA,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;AAEA,OAAO,SAASM,OAAT,GAAmB;AAAA;;AACtB,SAAOL,UAAU,CAACI,WAAD,CAAjB;AACH;;GAFeC,O;;AAIhB,OAAO,SAASC,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAkC;AAAA;;AAErC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMQ,QAAQ,GAAGd,UAAU,CAACO,EAAD,EAAK,OAAL,CAA3B;AAEAF,EAAAA,SAAS,CACL,MAAM;AACF,UAAMU,UAAU,GAAG,YAAY;AAC3B,YAAMC,SAAS,GAAG,MAAMf,OAAO,CAACa,QAAD,CAA/B;AAEAD,MAAAA,QAAQ,CACJG,SAAS,CAACC,IAAV,CAAeC,GAAf,CAAoBC,IAAI,IAAI;AACxB,cAAMC,WAAW,GAAG,YAAY;AAC5B,gBAAMC,SAAS,GAAGrB,UAAU,CAACO,EAAD,EAAK,UAAU,GAAV,GAAgBY,IAAI,CAACG,EAArB,GAA0B,GAA1B,GAAgC,QAArC,CAA5B;AACA,gBAAMC,UAAU,GAAG,MAAMtB,OAAO,CAACoB,SAAD,CAAhC;AAEA,iBAAOE,UAAU,CAACN,IAAX,CAAgBC,GAAhB,CAAqBM,IAAI,KAAK,EAAC,GAAGA,IAAI,CAACC,IAAL,EAAJ;AAAiBH,YAAAA,EAAE,EAAEE,IAAI,CAACF;AAA1B,WAAL,CAAzB,CAAP;AACH,SALD;;AAOA,YAAII,IAAI,GAAG,EAAX;AACAN,QAAAA,WAAW,GACVO,IADD,CACOC,MAAM,IAAIA,MAAM,CAACV,GAAP,CAAYM,IAAI,IAAIE,IAAI,CAACG,IAAL,CAAUL,IAAV,CAApB,CADjB,EAECM,KAFD,CAEOC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,CAAC,CAACG,OAA1C,CAFZ;AAKA,eAAO,EAAC,GAAGf,IAAI,CAACM,IAAL,EAAJ;AAAiBH,UAAAA,EAAE,EAAEH,IAAI,CAACG,EAA1B;AAA8BM,UAAAA,MAAM,EAAEF;AAAtC,SAAP;AACH,OAfD,CADI,CAAR;AAkBH,KArBD;;AAuBAX,IAAAA,UAAU;AACViB,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBrB,KAAhB;AACH,GA3BI,EA4BP,EA5BO,CAAT;AA8BA,QAAMuB,KAAK,GAAG;AACVvB,IAAAA;AADU,GAAd;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEuB,KAA7B;AAAA,cACKxB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IA7CeD,Y;;KAAAA,Y","sourcesContent":["import { collection, getDocs } from '@firebase/firestore';\r\nimport React, { createContext, useContext, useEffect, useState } from 'react'\r\nimport { db } from '../firebase/config';\r\n\r\nconst DataContext = createContext();\r\n\r\nexport function useData() {\r\n    return useContext(DataContext);\r\n}\r\n\r\nexport function DataProvider({children}) {\r\n\r\n    const [menus, setMenus] = useState([]);\r\n\r\n    const menusRef = collection(db, 'menus')\r\n\r\n    useEffect(\r\n        () => {\r\n            const queryMenus = async () => {\r\n                const menusDocs = await getDocs(menusRef);\r\n\r\n                setMenus(\r\n                    menusDocs.docs.map( menu => {\r\n                        const queryDishes = async () => {\r\n                            const dishesRef = collection(db, 'menus' + '/' + menu.id + '/' + 'dishes')\r\n                            const dishesDocs = await getDocs(dishesRef);\r\n                            \r\n                            return dishesDocs.docs.map( dish => ({...dish.data(), id: dish.id}))\r\n                        }\r\n\r\n                        var list = []\r\n                        queryDishes()\r\n                        .then( dishes => dishes.map( dish => list.push(dish) ))\r\n                        .catch(e => console.log('Error in reading dishes:', e.message))\r\n\r\n\r\n                        return {...menu.data(), id: menu.id, dishes: list}\r\n                    })\r\n                )\r\n            }\r\n\r\n            queryMenus();\r\n            console.log('!',menus);\r\n        }\r\n    , [])\r\n\r\n    const value = {\r\n        menus\r\n    }\r\n\r\n    return (\r\n        <DataContext.Provider value={value}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}