{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\React JS\\\\POS\\\\src\\\\comps\\\\MenuItem.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useData } from '../contexts/DataContext';\nimport { useMenu } from '../contexts/MenuContext';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MenuItem({\n  id,\n  name,\n  picture\n}) {\n  _s();\n\n  const {\n    menus\n  } = useData();\n  const {\n    setSelectedMenuId,\n    setSelectedDishes,\n    selectedMenuId\n  } = useMenu();\n  const [isClicked, setIsClicked] = useState(false);\n\n  const handleMenuItemClicked = () => {\n    setIsClicked(!isClicked); // Set the current select menu base on id.\n\n    setSelectedMenuId(id); // console.log(selectedMenuId);\n    // Get the list of dishes from the selected menu\n    // IMPORTANT\n    // const dishes = data().at(id - 1).dishes;\n\n    const menuWithId = menus.find(menu => {\n      return menu.id == id;\n    });\n    console.log('Selected menu: ', menuWithId);\n    console.log('This menu contains: ', menuWithId.dishes); // setSelectedMenuName(menuWithId.name);\n    // Input dishes from the selected menu to render them in the menu dish.\n    // setSelectedDishes(dishes.map(\n    //     dish => ({...dish, fromMenuId: id})\n    // ));\n    // console.log(selectedDishes);\n\n    setSelectedDishes(menuWithId.dishes.map(dish => dish)); // setDishBars( cutList(selectedDishes) );\n    // Refresh the list\n    // setRefreshCount(refreshCount + 1);\n    // setRefreshCurrentSelectedMenuCount(prevCount => prevCount + 1);\n  };\n\n  const [isHovering, setIsHovering] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MenuItem-container\",\n    style: {\n      backgroundColor: isHovering || selectedMenuId == id ? '#2C3A65' : 'white',\n      opacity: isHovering ? '1' : '0.8'\n    },\n    onClick: handleMenuItemClicked,\n    onMouseEnter: () => setIsHovering(!isHovering),\n    onMouseLeave: () => setIsHovering(!isHovering),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: picture,\n      style: {\n        width: 100,\n        height: 100,\n        borderRadius: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      style: {\n        fontWeight: 'bold',\n        fontSize: 18,\n        marginTop: 5\n      },\n      children: [\" \", name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MenuItem, \"0bV+UAtjbeFQfO0SvY3vsjvRmmU=\", false, function () {\n  return [useData, useMenu];\n});\n\n_c = MenuItem;\nexport default MenuItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuItem\");","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Máy tính/React JS/POS/src/comps/MenuItem.js"],"names":["React","useState","useData","useMenu","MenuItem","id","name","picture","menus","setSelectedMenuId","setSelectedDishes","selectedMenuId","isClicked","setIsClicked","handleMenuItemClicked","menuWithId","find","menu","console","log","dishes","map","dish","isHovering","setIsHovering","backgroundColor","opacity","width","height","borderRadius","fontWeight","fontSize","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAO,YAAP;;;AAEA,SAASC,QAAT,CAAkB;AACdC,EAAAA,EADc;AAEdC,EAAAA,IAFc;AAGdC,EAAAA;AAHc,CAAlB,EAIG;AAAA;;AACC,QAAM;AAAEC,IAAAA;AAAF,MAAYN,OAAO,EAAzB;AACA,QAAM;AAAEO,IAAAA,iBAAF;AAAqBC,IAAAA,iBAArB;AAAwCC,IAAAA;AAAxC,MAA2DR,OAAO,EAAxE;AAEA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMa,qBAAqB,GAAG,MAAM;AAChCD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ,CADgC,CAGhC;;AACAH,IAAAA,iBAAiB,CAACJ,EAAD,CAAjB,CAJgC,CAKhC;AAEA;AACA;AACA;;AAEA,UAAMU,UAAU,GAAGP,KAAK,CAACQ,IAAN,CAAYC,IAAI,IAAI;AAAC,aAAOA,IAAI,CAACZ,EAAL,IAAWA,EAAlB;AAAsB,KAA3C,CAAnB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,UAA/B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCJ,UAAU,CAACK,MAA/C,EAbgC,CAchC;AACA;AACA;AACA;AACA;AACA;;AAEAV,IAAAA,iBAAiB,CAACK,UAAU,CAACK,MAAX,CAAkBC,GAAlB,CACdC,IAAI,IAAKA,IADK,CAAD,CAAjB,CArBgC,CAyBhC;AAGA;AACA;AACA;AACH,GA/BD;;AAiCA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,KAAD,CAA5C;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AACI,IAAA,KAAK,EAAE;AACPwB,MAAAA,eAAe,EAAGF,UAAU,IAAIZ,cAAc,IAAIN,EAAjC,GAAuC,SAAvC,GAAmD,OAD7D;AAEPqB,MAAAA,OAAO,EAAEH,UAAU,GAAG,GAAH,GAAS;AAFrB,KADX;AAKI,IAAA,OAAO,EAAET,qBALb;AAMI,IAAA,YAAY,EAAE,MAAMU,aAAa,CAAC,CAACD,UAAF,CANrC;AAOI,IAAA,YAAY,EAAE,MAAMC,aAAa,CAAC,CAACD,UAAF,CAPrC;AAAA,4BASI;AAAK,MAAA,GAAG,EAAEhB,OAAV;AAAmB,MAAA,KAAK,EAAE;AAACoB,QAAAA,KAAK,EAAE,GAAR;AAAaC,QAAAA,MAAM,EAAE,GAArB;AAA0BC,QAAAA,YAAY,EAAE;AAAxC;AAA1B;AAAA;AAAA;AAAA;AAAA,YATJ,eAWI;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE,MAAb;AAAqBC,QAAAA,QAAQ,EAAE,EAA/B;AAAmCC,QAAAA,SAAS,EAAE;AAA9C,OAAb;AAAA,sBAAiE1B,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA5DQF,Q;UAKaF,O,EAC+CC,O;;;KAN5DC,Q;AA8DT,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useData } from '../contexts/DataContext';\r\nimport { useMenu } from '../contexts/MenuContext';\r\nimport '../App.css'\r\n\r\nfunction MenuItem({\r\n    id, \r\n    name, \r\n    picture\r\n}) {\r\n    const { menus } = useData()\r\n    const { setSelectedMenuId, setSelectedDishes, selectedMenuId } = useMenu()\r\n\r\n    const [isClicked, setIsClicked] = useState(false);\r\n\r\n    const handleMenuItemClicked = () => {\r\n        setIsClicked(!isClicked);\r\n\r\n        // Set the current select menu base on id.\r\n        setSelectedMenuId(id);\r\n        // console.log(selectedMenuId);\r\n        \r\n        // Get the list of dishes from the selected menu\r\n        // IMPORTANT\r\n        // const dishes = data().at(id - 1).dishes;\r\n\r\n        const menuWithId = menus.find( menu => {return menu.id == id;})\r\n        console.log('Selected menu: ', menuWithId);\r\n        console.log('This menu contains: ', menuWithId.dishes);\r\n        // setSelectedMenuName(menuWithId.name);\r\n        // Input dishes from the selected menu to render them in the menu dish.\r\n        // setSelectedDishes(dishes.map(\r\n        //     dish => ({...dish, fromMenuId: id})\r\n        // ));\r\n        // console.log(selectedDishes);\r\n\r\n        setSelectedDishes(menuWithId.dishes.map(\r\n            dish => (dish)\r\n        ))\r\n\r\n        // setDishBars( cutList(selectedDishes) );\r\n\r\n        \r\n        // Refresh the list\r\n        // setRefreshCount(refreshCount + 1);\r\n        // setRefreshCurrentSelectedMenuCount(prevCount => prevCount + 1);\r\n    }\r\n\r\n    const [isHovering, setIsHovering] = useState(false);\r\n\r\n    return (\r\n        <div className='MenuItem-container'\r\n            style={{\r\n            backgroundColor: (isHovering || selectedMenuId == id) ? '#2C3A65' : 'white',\r\n            opacity: isHovering ? '1' : '0.8'\r\n            }}\r\n            onClick={handleMenuItemClicked}\r\n            onMouseEnter={() => setIsHovering(!isHovering)}\r\n            onMouseLeave={() => setIsHovering(!isHovering)}\r\n        >\r\n            <img src={picture} style={{width: 100, height: 100, borderRadius: 20}}/>\r\n            {/* <text> {id} </text> */}\r\n            <text style={{fontWeight: 'bold', fontSize: 18, marginTop: 5}}> {name} </text>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuItem\r\n"]},"metadata":{},"sourceType":"module"}