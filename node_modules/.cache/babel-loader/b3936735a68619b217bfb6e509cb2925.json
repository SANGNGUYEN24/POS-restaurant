{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\React JS\\\\POS\\\\src\\\\screens\\\\MenuSection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { db } from '../firebase/config';\nimport { collection, getDocs } from 'firebase/firestore';\nimport Carousel from 'react-elastic-carousel';\nimport { AiFillMinusSquare, AiFillPlusSquare, AiOutlineShoppingCart } from 'react-icons/ai';\nimport cupcake from '../pictures/cupcake.jpg';\nimport { FaShoppingCart, FaSquare } from 'react-icons/fa';\nimport { TiDelete } from 'react-icons/ti';\nimport DishModel from '../comps/DishModel';\nimport homepageIcon from '../pictures/home.png'; // import {motion} from 'framer-motion';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MenuSection({\n  setRefresh,\n  refresh\n}) {\n  _s();\n\n  // const homepageIcon = 'https://cdn-icons.flaticon.com/png/512/2932/premium/2932143.png?token=exp=1636136139~hmac=818881b59fd1a0251d8a6a4a49eef751';\n  const [menus, setMenus] = useState([]);\n  const [selectedMenuId, setSelectedMenuId] = useState('');\n  const [refreshCount, setRefreshCount] = useState(0);\n  const [refreshDataCount, setRefreshDataCount] = useState(0);\n  const [selectedMenuName, setSelectedMenuName] = useState('');\n  const [selectedDish, setSelectedDish] = useState(null);\n  const [selectedDishes, setSelectedDishes] = useState([]);\n  const [dishBars, setDishBars] = useState([]);\n  const [isMenuItemClicked, setIsMenuItemClicked] = useState(false); // const [numbers, setNumbers ] = useState([0,1,2,3,4,5,6,7,8,9, 10, 11, 12]);\n\n  const [boughtList, setBoughtList] = useState([]);\n  const [totalAmount, setTotalAmout] = useState(0);\n  const [tax, setTax] = useState(0);\n  const [cost, setCost] = useState(0); // const N = 3;\n\n  const [isPaid, setIsPaid] = useState(null);\n  useEffect(() => {\n    console.log('Hi');\n\n    const queryMenus = async () => {\n      const menusRef = collection(db, 'menus');\n      const list = [];\n      const menus = await getDocs(menusRef);\n      menus.docs.forEach(menu => {\n        const queryDishes = async () => {\n          const dishesRef = collection(db, 'menus' + '/' + menu.id + '/' + 'dishes');\n          const dishes = await getDocs(dishesRef);\n          const dishesList = dishes.docs.map(dish => ({ ...dish.data(),\n            id: dish.id\n          }));\n          list.push({ ...menu.data(),\n            id: menu.id,\n            dishes: dishesList\n          });\n        };\n\n        queryDishes();\n      });\n      console.log('List :', list);\n      setMenus(list);\n    };\n\n    console.log('Menus: ', menus);\n    queryMenus();\n  }, [refresh]); //   useEffect(\n  //     () => {\n  //         if (menus.length == 0) {\n  //             const getMenus = async () => {\n  //                 const data = await getDocs(menusRef);\n  //                 data.docs.forEach(\n  //                     menu => {\n  //                     const getDishes = async () => {\n  //                         var dishesRef = collection(db, 'menus' + '/' + menu.id + '/' + 'dishes');\n  //                         const dishes = await getDocs(dishesRef);\n  //                         console.log('Adding at menu id', menu.id);\n  //                         const dishesList = dishes.docs.map( dish => ({...dish.data(), id: dish.id}));\n  //                         setMenus(\n  //                         (prevList) => ([...prevList, {...menu.data(), id: menu.id, dishes: dishesList}])\n  //                         )\n  //                     }\n  //                     getDishes();\n  //                     }\n  //                 )\n  //             }\n  //             console.log('Menu section re-render.');\n  //             getMenus();\n  //         }\n  //         // setDishBars( cutList(selectedDishes) );\n  //     }\n  //   , [refreshCount])\n\n  const [refreshCurrentSelectedMenuCount, setRefreshCurrentSelectedMenuCount] = useState(0); //   useEffect(\n  //       () => {\n  //         setDishBars( cutList(selectedDishes) );\n  //       }\n  //   , [refreshCurrentSelectedMenuCount])\n  // const menus = {menus};\n  // function PaymentModel() {\n  //     const handleClick = (e) => {\n  //         if (e.target.classList.contains('PaymentModal-backdrop')) {\n  //             setIsPaid(false);\n  //         }\n  //     }\n  //     return (\n  //         <div className='PaymentModal-backdrop'\n  //             onClick={handleClick}\n  //         >\n  //             <div className='PaymentModal-backdrop-container'>\n  //                 <text style={{fontSize: 28, fontStyle: 'italic'}}> Thank you for having us served you our best. Have a delicious dine. You're always welcome here.</text>\n  //             </div>\n  //         </div>\n  //     )\n  // }\n  // function showMenu(){\n  //     return (\n  //         <div>\n  //         {menus.map(\n  //             menu => {\n  //                 return (\n  //                     <div>\n  //                         <h1> {menu.id}: {menu.name} </h1>\n  //                         {menu.dishes.map(\n  //                             dish => <h2> {dish.name}: {dish.price}</h2>\n  //                         )}\n  //                     </div>\n  //                 )\n  //             }\n  //         )}\n  //     </div>\n  //     )\n  // }\n  // function MenuItem({id, name, picture}){\n  //     const [isClicked, setIsClicked] = useState(false);\n  //     const handleMenuItemClicked = () => {\n  //         setIsClicked(!isClicked);\n  //         // Set the current select menu base on id.\n  //         setSelectedMenuId(id);\n  //         console.log(selectedMenuId);\n  //         // Get the list of dishes from the selected menu\n  //         // IMPORTANT\n  //         // const dishes = data().at(id - 1).dishes;\n  //         const menuWithId = menus.find( menu => {return menu.id == id;})\n  //         console.log('Selected menu: ', menuWithId);\n  //         console.log('This menu contains: ', menuWithId.dishes);\n  //         setSelectedMenuName(menuWithId.name);\n  //         // Input dishes from the selected menu to render them in the menu dish.\n  //         // setSelectedDishes(dishes.map(\n  //         //     dish => ({...dish, fromMenuId: id})\n  //         // ));\n  //         // console.log(selectedDishes);\n  //         setSelectedDishes(menuWithId.dishes.map(\n  //             dish => (dish)\n  //         ))\n  //         // setDishBars( cutList(selectedDishes) );\n  //         // Refresh the list\n  //         // setRefreshCount(refreshCount + 1);\n  //         setRefreshCurrentSelectedMenuCount(refreshCurrentSelectedMenuCount + 1);\n  //     }\n  //     const [isHovering, setIsHovering] = useState(false);\n  //     return (\n  //         <div className='MenuItem-container'\n  //             style={{\n  //             backgroundColor: (isHovering || selectedMenuId == id) ? '#2C3A65' : 'white',\n  //             opacity: isHovering ? '1' : '0.8'\n  //             }}\n  //             onClick={handleMenuItemClicked}\n  //             onMouseEnter={() => setIsHovering(!isHovering)}\n  //             onMouseLeave={() => setIsHovering(!isHovering)}\n  //         >\n  //             <img src={picture} style={{width: 100, height: 100, borderRadius: 20}}/>\n  //             {/* <text> {id} </text> */}\n  //             <text style={{fontWeight: 'bold', fontSize: 18, marginTop: 5}}> {name} </text>\n  //         </div>\n  //     )\n  // }\n  // function DishItem({id, name, price, picture}){\n  //     const [isHovering, setIsHovering] = useState(false);\n  //     const handleClickBuyItem = () => {\n  //         const findAlreadyExistBoughtItem = boughtList.find( boughtItem => {return (boughtItem.id == id && boughtItem.fromMenuId == selectedMenuId)});\n  //         if (findAlreadyExistBoughtItem == undefined) {\n  //             const clickedItem = selectedDishes.find( (item) => {return item.id == id;})\n  //             setBoughtList([...boughtList, {...clickedItem, quantity: 1, fromMenuId: selectedMenuId}])\n  //         } else {\n  //             setBoughtList(\n  //                 boughtList.map(\n  //                     boughtItem => (boughtItem.id == id && boughtItem.fromMenuId == selectedMenuId) ? {...boughtItem, quantity: boughtItem.quantity + 1} : boughtItem\n  //                 )\n  //             )\n  //         }\n  //         console.log(\"The current bought list contains:\", boughtList);\n  //         setCost((prevAmount) => (parseFloat(prevAmount) + parseFloat(price)));\n  //         setTax( (prevAmount) => (prevAmount + (0.1) * parseFloat(price)));\n  //         setTotalAmout( (prevAmount) => (prevAmount + 1.1 * parseFloat(price)));\n  //         setIsHovering(true);\n  //     }\n  //     const handleClickedDishItemImage = () => {\n  //         setSelectedDish( selectedDishes.find( dish => {return dish.id == id}));\n  //     }\n  //     return (\n  //         <div className='DishItem-container'\n  //             onMouseEnter={() => setIsHovering(true)}\n  //             onMouseLeave={() => setIsHovering(false)}\n  //         >\n  //             <div style={{borderTopLeftRadius:20, borderTopRightRadius: 20, height: '60%', width: '100%', display:'flex', justifyContent:'center', backgroundColor: isHovering ? '#2C3A65' : 'white', alignItems:'center'}}\n  //                 onClick={handleClickedDishItemImage}\n  //             >\n  //                 <img src={picture} alt={cupcake} style={{width: 150, height: 150, borderRadius: 30}}/>\n  //             </div>\n  //             <div style={{backgroundColor: 'white', borderBottomStyle: 'ridge', display:'flex', height: '20%', width: '80%', alignItems: 'center'}}>\n  //                 <text style={{fontWeight: 'bold'}}> {name} </text>\n  //             </div>\n  //             <div style={{alignItems:'center', backgroundColor: 'white', height: '20%', width: '80%', flexDirection: 'row', display: 'flex'}}>\n  //                 <div style={{width: '80%'}}>\n  //                     <text\n  //                         style={{fontSize: 24, color: 'red', fontWeight: 'bold'}}\n  //                     > {'$' + price} </text>\n  //                 </div>\n  //                 <div style={{width: '20%', backgroundColor: 'white', display: 'flex', justifyContent:'end', alignContent: 'center'}}>\n  //                     <div style={{borderRadius:10, display:'flex', backgroundColor: 'red', height: 35, width: 35, justifyContent:'center', alignItems:'center'}}\n  //                             onClick={handleClickBuyItem}\n  //                     >\n  //                         <AiOutlineShoppingCart\n  //                             color='white'\n  //                             size={28} \n  //                             style={{float: 'right'}}\n  //                         />\n  //                     </div>\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     )\n  // }\n  // function BoughtList({boughtList}){\n  //     return (\n  //         <div style={{backgroundColor: 'white'}}>\n  //             <Carousel\n  //                 itemsToShow={4}\n  //                 itemsToScroll={4}\n  //                 verticalMode={true}\n  //                 itemPadding={[10, 10]}\n  //                 showArrows={false}\n  //                 pagination={false}\n  //             >\n  //                 {boughtList.map(\n  //                     boughtItem => <BoughtItem fromMenuId={boughtItem.fromMenuId} quantity={boughtItem.quantity} id={boughtItem.id} name={boughtItem.name} price={boughtItem.price} image={boughtItem.img}/>\n  //                 )}\n  //             </Carousel>\n  //         </div>\n  //     )\n  // }\n  // function BoughtItem({fromMenuId, id, name, price, quantity, image}){\n  //     const handleClickAddItem = () => {\n  //         // var dishItem = boughtList.find( boughtItem => {return boughtItem.id == id});\n  //         // setBoughtList(boughtList.filter( (boughtItem) => {return boughtItem.id != id}));\n  //         // setBoughtList([...boughtList, {}])\n  //         setBoughtList(\n  //             boughtList.map(\n  //                 boughtItem => boughtItem.id == id ? {...boughtItem, quantity: boughtItem.quantity + 1} : boughtItem\n  //             )\n  //         )\n  //         setCost((prevAmount) => (parseFloat(prevAmount) + parseFloat(price)));\n  //         setTax( (prevAmount) => (prevAmount + (0.1) * parseFloat(price)));\n  //         setTotalAmout( (prevAmount) => (prevAmount + 1.1 * parseFloat(price)));\n  //         console.log(\"After buy more a new one\", boughtList);\n  //     }\n  //     const handleClickMinusItem = () => {\n  //         if (quantity == 1) {\n  //             setBoughtList(boughtList.filter( boughtItem => {\n  //                 // return (boughtItem.fromMenuId != selectedMenuId) || (boughtItem.fromMenuId == selectedMenuId && boughtItem.id != id)\n  //                 var x = boughtItem.id != id;\n  //                 var y = boughtItem.fromMenuId != fromMenuId;\n  //                 console.log(boughtItem.fromMenuId);\n  //                 console.log(fromMenuId);\n  //                 console.log('Condition X:', x);\n  //                 console.log('Condition Y:', y);\n  //                 console.log(boughtItem.fromMenuId);\n  //                 console.log(fromMenuId);\n  //                 return (boughtItem.id != id || boughtItem.fromMenuId != fromMenuId)\n  //                 ;}));\n  //         } else {\n  //             setBoughtList(\n  //                 boughtList.map(\n  //                     boughtItem => (boughtItem.id == id && boughtItem.fromMenuId == fromMenuId) ? {...boughtItem, quantity: boughtItem.quantity - 1} : boughtItem\n  //                 )\n  //             )\n  //         }\n  //         setCost((prevAmount) => (parseFloat(prevAmount) - parseFloat(price)));\n  //         setTax( (prevAmount) => (prevAmount - (0.1) * parseFloat(price)));\n  //         setTotalAmout( (prevAmount) => (totalAmount - 1.1 * parseFloat(price)));\n  //         console.log('After substract a time', boughtList);\n  //     }\n  //     const handleClickDeleteItem = () => {\n  //         setBoughtList(\n  //             boughtList.filter( boughtItem => {return boughtItem.id != id;})\n  //         )\n  //         setCost((prevAmount) => (parseFloat(prevAmount) - quantity * parseFloat(price)));\n  //         setTax( (prevAmount) => (prevAmount - quantity * (0.1) * parseFloat(price)));\n  //         setTotalAmout( (prevAmount) => (totalAmount - quantity * 1.1 * parseFloat(price)));\n  //     }\n  //     return(\n  //         <div style={{borderColor: 'white', height: 100, width: '100%', borderStyle: 'ridge',backgroundColor: 'white', flexDirection:'row', display:'flex', padding: 10, borderRadius: 20\n  //         , animationName: 'example', animationDuration: '4s'\n  //         }}>\n  //             <div style={{height: '100%', width: '30%', display: 'flex', justifyContent: 'center', alignItems :'center'}}>\n  //                 <img src={image} alt={cupcake} style={{height: 100, width: 100, borderRadius:20}} />\n  //             </div>\n  //             <div style={{width: '70%', backgroundColor:'white', paddingLeft: 5, paddingRight: 5}}>\n  //                 <div style={{backgroundColor: 'white', display: 'flex', flexDirection: 'row'}}>\n  //                     <text style={{fontWeight: 'bold', backgroundColor: 'white', width: '90%'}}> {name} </text>\n  //                     <div style={{float: 'right'}}>\n  //                         <TiDelete\n  //                             color='red'\n  //                             style={{alignSelf:'end'}}\n  //                             size={36}\n  //                             onClick={handleClickDeleteItem}\n  //                         />\n  //                     </div>\n  //                 </div>\n  //                 <div style={{marginTop: 20, backgroundColor: 'white', width: '100%', display: 'flex'}}>\n  //                     <AiFillMinusSquare size={40}\n  //                         color='gray'\n  //                         onClick={handleClickMinusItem}\n  //                     />\n  //                     <div style={{width: '30%', justifyContent:'center', alignItems:'center', display: 'flex'}}>\n  //                         <text style={{fontSize: 20, fontWeight: 'bold'}}> {quantity} </text>\n  //                     </div>\n  //                     <AiFillPlusSquare size={40}\n  //                         color='tomato'\n  //                         onClick={handleClickAddItem}\n  //                     />\n  //                     <div style={{width: '70%', justifyContent:'end', alignItems:'center', display: 'flex'}}>\n  //                     <text style={{color: 'red', fontWeight: 'bold', fontSize:30}}> $ {price * quantity} </text>\n  //                     </div>\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     )\n  // }\n  // const cutList = (list) => {\n  //     var array = [];\n  //     const numOfDishes = list.length;\n  //     for(var i = 0; i<numOfDishes;) {\n  //         if (numOfDishes - i >= 3) {\n  //             array.push([list.at(i), list.at(i + 1), list.at(i + 2)])\n  //             i += 3;\n  //         } else if (numOfDishes - i >= 2) {\n  //             array.push([list.at(i), list.at(i + 1)])\n  //             i += 2;\n  //         } else {\n  //             array.push([list.at(i)])\n  //             i += 1;\n  //         }\n  //     }\n  //     console.log('Cutted list: ', array);\n  //     return array;\n  // }\n  // const handleClickPayment = () => {\n  //     const billDesc = {\n  //         cost: cost,\n  //         tax: tax,\n  //         totalAmount: totalAmount,\n  //         boughtItems: boughtList,\n  //         createdAt: new Date(),\n  //     }\n  //     setCost(0);\n  //     setTax(0);\n  //     setTotalAmout(0);\n  //     setBoughtList([]);\n  //     setIsPaid(true);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MenuSection-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MenuSection-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MenuSection-menu-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MenuSection-menu-bar-home\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: homepageIcon,\n            style: {\n              width: 50,\n              height: 50\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginLeft: 20,\n            fontWeight: 'bold'\n          },\n          children: \" Homepage \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        children: \"Hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }, this), menus.map(menu => /*#__PURE__*/_jsxDEV(\"text\", {\n        children: menu.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 38\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MenuSection, \"i46uYPt664W/2jyXIAR6iH5lN/M=\");\n\n_c = MenuSection;\nexport default MenuSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuSection\");","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Máy tính/React JS/POS/src/screens/MenuSection.js"],"names":["React","useState","useEffect","db","collection","getDocs","Carousel","AiFillMinusSquare","AiFillPlusSquare","AiOutlineShoppingCart","cupcake","FaShoppingCart","FaSquare","TiDelete","DishModel","homepageIcon","MenuSection","setRefresh","refresh","menus","setMenus","selectedMenuId","setSelectedMenuId","refreshCount","setRefreshCount","refreshDataCount","setRefreshDataCount","selectedMenuName","setSelectedMenuName","selectedDish","setSelectedDish","selectedDishes","setSelectedDishes","dishBars","setDishBars","isMenuItemClicked","setIsMenuItemClicked","boughtList","setBoughtList","totalAmount","setTotalAmout","tax","setTax","cost","setCost","isPaid","setIsPaid","console","log","queryMenus","menusRef","list","docs","forEach","menu","queryDishes","dishesRef","id","dishes","dishesList","map","dish","data","push","refreshCurrentSelectedMenuCount","setRefreshCurrentSelectedMenuCount","width","height","marginLeft","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport { db } from '../firebase/config';\r\nimport {collection, getDocs} from 'firebase/firestore';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport {AiFillMinusSquare, AiFillPlusSquare, AiOutlineShoppingCart} from 'react-icons/ai';\r\nimport cupcake from '../pictures/cupcake.jpg'\r\nimport {FaShoppingCart, FaSquare} from 'react-icons/fa';\r\nimport {TiDelete} from 'react-icons/ti';\r\nimport DishModel from '../comps/DishModel';\r\nimport homepageIcon from '../pictures/home.png';\r\n\r\n// import {motion} from 'framer-motion';\r\n\r\nfunction MenuSection({setRefresh, refresh}) {\r\n    // const homepageIcon = 'https://cdn-icons.flaticon.com/png/512/2932/premium/2932143.png?token=exp=1636136139~hmac=818881b59fd1a0251d8a6a4a49eef751';\r\n\r\n    const [menus, setMenus] = useState([]);\r\n    const [selectedMenuId, setSelectedMenuId] = useState('');\r\n    const [refreshCount, setRefreshCount] = useState(0);\r\n    const [refreshDataCount, setRefreshDataCount] = useState(0);\r\n    const [selectedMenuName, setSelectedMenuName] = useState('');\r\n    const [selectedDish, setSelectedDish] = useState(null);\r\n\r\n    const [selectedDishes, setSelectedDishes] = useState([]);\r\n    const [dishBars, setDishBars] = useState([]);\r\n    const [isMenuItemClicked, setIsMenuItemClicked] = useState(false);\r\n    // const [numbers, setNumbers ] = useState([0,1,2,3,4,5,6,7,8,9, 10, 11, 12]);\r\n    const [boughtList, setBoughtList] = useState([]);\r\n\r\n    const [totalAmount, setTotalAmout] = useState(0);\r\n    const [tax, setTax] = useState(0);\r\n    const [cost, setCost] = useState(0);\r\n    // const N = 3;\r\n\r\n    const [isPaid, setIsPaid] = useState(null);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log('Hi');\r\n\r\n            const queryMenus = async () => {\r\n                const menusRef = collection(db, 'menus');\r\n\r\n                const list = [];\r\n    \r\n                const menus = await getDocs(menusRef);\r\n    \r\n                menus.docs.forEach(\r\n                    menu => {\r\n                        const queryDishes = async () => {\r\n                            const dishesRef = collection(db, 'menus' + '/' + menu.id + '/' + 'dishes')\r\n                            const dishes = await getDocs(dishesRef);\r\n                            const dishesList = dishes.docs.map( dish => ({...dish.data(), id: dish.id}) )\r\n                            \r\n                            list.push(\r\n                                {...menu.data(), id: menu.id, dishes: dishesList}\r\n                            )\r\n                        }\r\n                        \r\n                        queryDishes();\r\n                    }\r\n                )\r\n                \r\n                console.log('List :', list);\r\n                setMenus( list )\r\n            }\r\n\r\n            console.log('Menus: ', menus)\r\n            queryMenus();\r\n        }\r\n    , [refresh])\r\n    \r\n\r\n\r\n//   useEffect(\r\n//     () => {\r\n\r\n//         if (menus.length == 0) {\r\n//             const getMenus = async () => {\r\n//                 const data = await getDocs(menusRef);\r\n    \r\n//                 data.docs.forEach(\r\n//                     menu => {\r\n    \r\n//                     const getDishes = async () => {\r\n//                         var dishesRef = collection(db, 'menus' + '/' + menu.id + '/' + 'dishes');\r\n//                         const dishes = await getDocs(dishesRef);\r\n    \r\n//                         console.log('Adding at menu id', menu.id);\r\n//                         const dishesList = dishes.docs.map( dish => ({...dish.data(), id: dish.id}));\r\n    \r\n//                         setMenus(\r\n//                         (prevList) => ([...prevList, {...menu.data(), id: menu.id, dishes: dishesList}])\r\n//                         )\r\n//                     }\r\n    \r\n//                     getDishes();\r\n//                     }\r\n//                 )\r\n//             }\r\n    \r\n//             console.log('Menu section re-render.');\r\n    \r\n//             getMenus();\r\n//         }\r\n//         // setDishBars( cutList(selectedDishes) );\r\n        \r\n//     }\r\n//   , [refreshCount])\r\n\r\n  const [refreshCurrentSelectedMenuCount, setRefreshCurrentSelectedMenuCount] = useState(0);\r\n\r\n//   useEffect(\r\n//       () => {\r\n//         setDishBars( cutList(selectedDishes) );\r\n//       }\r\n//   , [refreshCurrentSelectedMenuCount])\r\n\r\n    // const menus = {menus};\r\n\r\n    // function PaymentModel() {\r\n    //     const handleClick = (e) => {\r\n    //         if (e.target.classList.contains('PaymentModal-backdrop')) {\r\n    //             setIsPaid(false);\r\n    //         }\r\n    //     }\r\n\r\n    //     return (\r\n    //         <div className='PaymentModal-backdrop'\r\n    //             onClick={handleClick}\r\n    //         >\r\n    //             <div className='PaymentModal-backdrop-container'>\r\n    //                 <text style={{fontSize: 28, fontStyle: 'italic'}}> Thank you for having us served you our best. Have a delicious dine. You're always welcome here.</text>\r\n    //             </div>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n    \r\n    // function showMenu(){\r\n    //     return (\r\n    //         <div>\r\n    //         {menus.map(\r\n    //             menu => {\r\n    //                 return (\r\n    //                     <div>\r\n    //                         <h1> {menu.id}: {menu.name} </h1>\r\n    //                         {menu.dishes.map(\r\n    //                             dish => <h2> {dish.name}: {dish.price}</h2>\r\n    //                         )}\r\n    //                     </div>\r\n    //                 )\r\n    //             }\r\n    //         )}\r\n    //     </div>\r\n    //     )\r\n    // }\r\n\r\n    // function MenuItem({id, name, picture}){\r\n    //     const [isClicked, setIsClicked] = useState(false);\r\n\r\n    //     const handleMenuItemClicked = () => {\r\n    //         setIsClicked(!isClicked);\r\n\r\n    //         // Set the current select menu base on id.\r\n    //         setSelectedMenuId(id);\r\n    //         console.log(selectedMenuId);\r\n            \r\n    //         // Get the list of dishes from the selected menu\r\n    //         // IMPORTANT\r\n    //         // const dishes = data().at(id - 1).dishes;\r\n\r\n    //         const menuWithId = menus.find( menu => {return menu.id == id;})\r\n    //         console.log('Selected menu: ', menuWithId);\r\n    //         console.log('This menu contains: ', menuWithId.dishes);\r\n    //         setSelectedMenuName(menuWithId.name);\r\n    //         // Input dishes from the selected menu to render them in the menu dish.\r\n    //         // setSelectedDishes(dishes.map(\r\n    //         //     dish => ({...dish, fromMenuId: id})\r\n    //         // ));\r\n    //         // console.log(selectedDishes);\r\n\r\n    //         setSelectedDishes(menuWithId.dishes.map(\r\n    //             dish => (dish)\r\n    //         ))\r\n\r\n    //         // setDishBars( cutList(selectedDishes) );\r\n\r\n            \r\n    //         // Refresh the list\r\n    //         // setRefreshCount(refreshCount + 1);\r\n    //         setRefreshCurrentSelectedMenuCount(refreshCurrentSelectedMenuCount + 1);\r\n    //     }\r\n\r\n    //     const [isHovering, setIsHovering] = useState(false);\r\n\r\n    //     return (\r\n    //         <div className='MenuItem-container'\r\n    //             style={{\r\n    //             backgroundColor: (isHovering || selectedMenuId == id) ? '#2C3A65' : 'white',\r\n    //             opacity: isHovering ? '1' : '0.8'\r\n    //             }}\r\n    //             onClick={handleMenuItemClicked}\r\n    //             onMouseEnter={() => setIsHovering(!isHovering)}\r\n    //             onMouseLeave={() => setIsHovering(!isHovering)}\r\n    //         >\r\n    //             <img src={picture} style={{width: 100, height: 100, borderRadius: 20}}/>\r\n    //             {/* <text> {id} </text> */}\r\n    //             <text style={{fontWeight: 'bold', fontSize: 18, marginTop: 5}}> {name} </text>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    // function DishItem({id, name, price, picture}){\r\n    //     const [isHovering, setIsHovering] = useState(false);\r\n\r\n    //     const handleClickBuyItem = () => {\r\n    //         const findAlreadyExistBoughtItem = boughtList.find( boughtItem => {return (boughtItem.id == id && boughtItem.fromMenuId == selectedMenuId)});\r\n\r\n    //         if (findAlreadyExistBoughtItem == undefined) {\r\n    //             const clickedItem = selectedDishes.find( (item) => {return item.id == id;})\r\n    //             setBoughtList([...boughtList, {...clickedItem, quantity: 1, fromMenuId: selectedMenuId}])\r\n    //         } else {\r\n    //             setBoughtList(\r\n    //                 boughtList.map(\r\n    //                     boughtItem => (boughtItem.id == id && boughtItem.fromMenuId == selectedMenuId) ? {...boughtItem, quantity: boughtItem.quantity + 1} : boughtItem\r\n    //                 )\r\n    //             )\r\n    //         }\r\n\r\n    //         console.log(\"The current bought list contains:\", boughtList);\r\n    //         setCost((prevAmount) => (parseFloat(prevAmount) + parseFloat(price)));\r\n    //         setTax( (prevAmount) => (prevAmount + (0.1) * parseFloat(price)));\r\n    //         setTotalAmout( (prevAmount) => (prevAmount + 1.1 * parseFloat(price)));\r\n\r\n    //         setIsHovering(true);\r\n    //     }\r\n\r\n    //     const handleClickedDishItemImage = () => {\r\n    //         setSelectedDish( selectedDishes.find( dish => {return dish.id == id}));\r\n    //     }\r\n        \r\n    //     return (\r\n    //         <div className='DishItem-container'\r\n    //             onMouseEnter={() => setIsHovering(true)}\r\n    //             onMouseLeave={() => setIsHovering(false)}\r\n    //         >\r\n    //             <div style={{borderTopLeftRadius:20, borderTopRightRadius: 20, height: '60%', width: '100%', display:'flex', justifyContent:'center', backgroundColor: isHovering ? '#2C3A65' : 'white', alignItems:'center'}}\r\n    //                 onClick={handleClickedDishItemImage}\r\n    //             >\r\n    //                 <img src={picture} alt={cupcake} style={{width: 150, height: 150, borderRadius: 30}}/>\r\n\r\n    //             </div>\r\n\r\n    //             <div style={{backgroundColor: 'white', borderBottomStyle: 'ridge', display:'flex', height: '20%', width: '80%', alignItems: 'center'}}>\r\n    //                 <text style={{fontWeight: 'bold'}}> {name} </text>\r\n    //             </div>\r\n\r\n    //             <div style={{alignItems:'center', backgroundColor: 'white', height: '20%', width: '80%', flexDirection: 'row', display: 'flex'}}>\r\n    //                 <div style={{width: '80%'}}>\r\n    //                     <text\r\n    //                         style={{fontSize: 24, color: 'red', fontWeight: 'bold'}}\r\n    //                     > {'$' + price} </text>\r\n    //                 </div>\r\n\r\n    //                 <div style={{width: '20%', backgroundColor: 'white', display: 'flex', justifyContent:'end', alignContent: 'center'}}>\r\n    //                     <div style={{borderRadius:10, display:'flex', backgroundColor: 'red', height: 35, width: 35, justifyContent:'center', alignItems:'center'}}\r\n    //                             onClick={handleClickBuyItem}\r\n    //                     >\r\n    //                         <AiOutlineShoppingCart\r\n                                \r\n    //                             color='white'\r\n    //                             size={28} \r\n    //                             style={{float: 'right'}}\r\n    //                         />\r\n    //                     </div>\r\n    //                 </div>\r\n    //             </div>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    // function BoughtList({boughtList}){\r\n    //     return (\r\n    //         <div style={{backgroundColor: 'white'}}>\r\n    //             <Carousel\r\n    //                 itemsToShow={4}\r\n    //                 itemsToScroll={4}\r\n    //                 verticalMode={true}\r\n    //                 itemPadding={[10, 10]}\r\n    //                 showArrows={false}\r\n    //                 pagination={false}\r\n    //             >\r\n    //                 {boughtList.map(\r\n    //                     boughtItem => <BoughtItem fromMenuId={boughtItem.fromMenuId} quantity={boughtItem.quantity} id={boughtItem.id} name={boughtItem.name} price={boughtItem.price} image={boughtItem.img}/>\r\n    //                 )}\r\n    //             </Carousel>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    // function BoughtItem({fromMenuId, id, name, price, quantity, image}){\r\n    //     const handleClickAddItem = () => {\r\n    //         // var dishItem = boughtList.find( boughtItem => {return boughtItem.id == id});\r\n            \r\n    //         // setBoughtList(boughtList.filter( (boughtItem) => {return boughtItem.id != id}));\r\n    //         // setBoughtList([...boughtList, {}])\r\n\r\n    //         setBoughtList(\r\n    //             boughtList.map(\r\n    //                 boughtItem => boughtItem.id == id ? {...boughtItem, quantity: boughtItem.quantity + 1} : boughtItem\r\n    //             )\r\n    //         )\r\n            \r\n    //         setCost((prevAmount) => (parseFloat(prevAmount) + parseFloat(price)));\r\n    //         setTax( (prevAmount) => (prevAmount + (0.1) * parseFloat(price)));\r\n    //         setTotalAmout( (prevAmount) => (prevAmount + 1.1 * parseFloat(price)));\r\n    //         console.log(\"After buy more a new one\", boughtList);\r\n    //     }\r\n\r\n    //     const handleClickMinusItem = () => {\r\n    //         if (quantity == 1) {\r\n\r\n    //             setBoughtList(boughtList.filter( boughtItem => {\r\n    //                 // return (boughtItem.fromMenuId != selectedMenuId) || (boughtItem.fromMenuId == selectedMenuId && boughtItem.id != id)\r\n    //                 var x = boughtItem.id != id;\r\n    //                 var y = boughtItem.fromMenuId != fromMenuId;\r\n    //                 console.log(boughtItem.fromMenuId);\r\n    //                 console.log(fromMenuId);\r\n    //                 console.log('Condition X:', x);\r\n    //                 console.log('Condition Y:', y);\r\n\r\n    //                 console.log(boughtItem.fromMenuId);\r\n    //                 console.log(fromMenuId);\r\n\r\n    //                 return (boughtItem.id != id || boughtItem.fromMenuId != fromMenuId)\r\n    //                 ;}));\r\n    //         } else {\r\n    //             setBoughtList(\r\n    //                 boughtList.map(\r\n    //                     boughtItem => (boughtItem.id == id && boughtItem.fromMenuId == fromMenuId) ? {...boughtItem, quantity: boughtItem.quantity - 1} : boughtItem\r\n    //                 )\r\n    //             )\r\n    //         }\r\n\r\n    //         setCost((prevAmount) => (parseFloat(prevAmount) - parseFloat(price)));\r\n    //         setTax( (prevAmount) => (prevAmount - (0.1) * parseFloat(price)));\r\n    //         setTotalAmout( (prevAmount) => (totalAmount - 1.1 * parseFloat(price)));\r\n    //         console.log('After substract a time', boughtList);\r\n    //     }\r\n\r\n    //     const handleClickDeleteItem = () => {\r\n    //         setBoughtList(\r\n    //             boughtList.filter( boughtItem => {return boughtItem.id != id;})\r\n    //         )\r\n\r\n    //         setCost((prevAmount) => (parseFloat(prevAmount) - quantity * parseFloat(price)));\r\n    //         setTax( (prevAmount) => (prevAmount - quantity * (0.1) * parseFloat(price)));\r\n    //         setTotalAmout( (prevAmount) => (totalAmount - quantity * 1.1 * parseFloat(price)));\r\n    //     }\r\n    //     return(\r\n    //         <div style={{borderColor: 'white', height: 100, width: '100%', borderStyle: 'ridge',backgroundColor: 'white', flexDirection:'row', display:'flex', padding: 10, borderRadius: 20\r\n    //         , animationName: 'example', animationDuration: '4s'\r\n    //         }}>\r\n    //             <div style={{height: '100%', width: '30%', display: 'flex', justifyContent: 'center', alignItems :'center'}}>\r\n    //                 <img src={image} alt={cupcake} style={{height: 100, width: 100, borderRadius:20}} />\r\n    //             </div>\r\n                \r\n    //             <div style={{width: '70%', backgroundColor:'white', paddingLeft: 5, paddingRight: 5}}>\r\n    //                 <div style={{backgroundColor: 'white', display: 'flex', flexDirection: 'row'}}>\r\n    //                     <text style={{fontWeight: 'bold', backgroundColor: 'white', width: '90%'}}> {name} </text>\r\n    //                     <div style={{float: 'right'}}>\r\n    //                         <TiDelete\r\n    //                             color='red'\r\n    //                             style={{alignSelf:'end'}}\r\n    //                             size={36}\r\n    //                             onClick={handleClickDeleteItem}\r\n    //                         />\r\n    //                     </div>\r\n\r\n    //                 </div>\r\n\r\n    //                 <div style={{marginTop: 20, backgroundColor: 'white', width: '100%', display: 'flex'}}>\r\n    //                     <AiFillMinusSquare size={40}\r\n    //                         color='gray'\r\n    //                         onClick={handleClickMinusItem}\r\n    //                     />\r\n    //                     <div style={{width: '30%', justifyContent:'center', alignItems:'center', display: 'flex'}}>\r\n    //                         <text style={{fontSize: 20, fontWeight: 'bold'}}> {quantity} </text>\r\n    //                     </div>\r\n    //                     <AiFillPlusSquare size={40}\r\n    //                         color='tomato'\r\n    //                         onClick={handleClickAddItem}\r\n    //                     />\r\n    //                     <div style={{width: '70%', justifyContent:'end', alignItems:'center', display: 'flex'}}>\r\n    //                     <text style={{color: 'red', fontWeight: 'bold', fontSize:30}}> $ {price * quantity} </text>\r\n    //                     </div>\r\n    //                 </div>\r\n    //             </div>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    // const cutList = (list) => {\r\n    //     var array = [];\r\n    //     const numOfDishes = list.length;\r\n\r\n    //     for(var i = 0; i<numOfDishes;) {\r\n    //         if (numOfDishes - i >= 3) {\r\n    //             array.push([list.at(i), list.at(i + 1), list.at(i + 2)])\r\n    //             i += 3;\r\n    //         } else if (numOfDishes - i >= 2) {\r\n    //             array.push([list.at(i), list.at(i + 1)])\r\n    //             i += 2;\r\n    //         } else {\r\n    //             array.push([list.at(i)])\r\n    //             i += 1;\r\n    //         }\r\n    //     }\r\n\r\n    //     console.log('Cutted list: ', array);\r\n    //     return array;\r\n    // }\r\n\r\n    // const handleClickPayment = () => {\r\n    //     const billDesc = {\r\n    //         cost: cost,\r\n    //         tax: tax,\r\n    //         totalAmount: totalAmount,\r\n    //         boughtItems: boughtList,\r\n    //         createdAt: new Date(),\r\n    //     }\r\n\r\n    //     setCost(0);\r\n    //     setTax(0);\r\n    //     setTotalAmout(0);\r\n    //     setBoughtList([]);\r\n\r\n    //     setIsPaid(true);\r\n    // }\r\n\r\n    return (\r\n        <div className='MenuSection-container'>\r\n            {/* <img src={bg} alt={'Back ground'} style={{height: 100, width: 100}}/> */}\r\n\r\n            {/* Left-hand side section */}\r\n            <div className='MenuSection-menu'>\r\n\r\n                {/* Menu bar */}\r\n                <div className='MenuSection-menu-bar'>\r\n                    <div className='MenuSection-menu-bar-home'>\r\n                        {/* <AiOutlineHome size={50} color={'white'}\r\n                        /> */}\r\n                        <img src={homepageIcon} style={{width: 50, height: 50}} />\r\n                    </div>\r\n\r\n                    <h2 style={{marginLeft: 20, fontWeight: 'bold'}}> Homepage </h2>\r\n                </div>\r\n\r\n                <text>Hi</text>\r\n                { menus.map( menu => <text>{menu.id}</text>) }\r\n\r\n                {/* Menu item carousel */}\r\n                {/* <div className='MenuSection-menu-item'>\r\n                    <Carousel\r\n                        itemsToShow={3}\r\n                        itemsToScroll={1}\r\n                        // pagination={false}\r\n                        // enableTilt={true}\r\n                        // preventDefaultTouchmoveEvent={true} \r\n                        showArrows={true}\r\n                        // renderPagination={myPagnition}\r\n                        // renderArrow={myArrow}\r\n                        children={menus.map( item => <MenuItem key={item.id} id={item.id} name={item.name} picture={item.img} />)}\r\n                    >\r\n                    </Carousel>\r\n                </div> */}\r\n\r\n                {/* Dish item carousel */}\r\n                {/* <div className='MenuSection-menu-dish'>\r\n\r\n                    <div className='MenuSection-menu-dish-title'>\r\n                        <div style={{borderBottomStyle:'inset', width: '45%', height: 20, marginLeft: 15, marginLeft: 15}}></div>\r\n                        \r\n                        <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\r\n                            <text style={{fontWeight: 'bold', fontSize: 28, color: 'black', fontStyle: 'oblique'}}>\r\n                                {selectedMenuName == '' ? (<div> </div>) : selectedMenuName}\r\n                            </text>\r\n                        </div>\r\n\r\n                        <div style={{borderBottomStyle:'inset', width: '45%', height: 20, marginRight: 15}}></div>\r\n                    </div>\r\n                    \r\n                    {selectedMenuId != '' ? (\r\n                        <div className='MenuSection-menu-dish-item'>\r\n                        <Carousel\r\n                            itemsToShow={2}\r\n                            verticalMode={true}\r\n                            // pagination={false}\r\n                            children={dishBars.map(\r\n                                dishBar => (\r\n                                    <Carousel\r\n                                    key={dishBar.id}\r\n                                    enableSwipe={false}\r\n                                    showArrows={false}\r\n                                    itemsToShow={3}\r\n                                    pagination={false}\r\n                                    showEmptySlots\r\n                                    >\r\n                                        {dishBar.map(\r\n                                            dish => <DishItem fromMenuId={dishBar.id} key={dish.id} id={dish.id} name={dish.name} price={dish.price} picture={dish.img}/>\r\n                                        )}\r\n                                    </Carousel>\r\n                                )\r\n                            )}\r\n                            itemPadding={[15, 15]}\r\n                            showArrows={false}\r\n                        >\r\n                        </Carousel>\r\n                    </div>\r\n                    ) : (\r\n                        <div>\r\n\r\n                        </div>\r\n                    )}\r\n                    \r\n                </div>\r\n            </div> */}\r\n\r\n            {/* Right-hand side section */}\r\n            {/* <div className='MenuSection-cart'>\r\n                <div style={{height: '10%', backgroundColor: 'white', alignItems: 'center', display: 'flex', paddingLeft: 10, paddingRight: 10}}>\r\n                    <FaShoppingCart color='tomato' size={50} />\r\n                    <text style={{marginLeft: 20, color: 'tomato', fontWeight: 'bold', fontSize: 28}}>Your cart ({boughtList.length})</text>\r\n                </div>\r\n\r\n                <div style={{height: '60%', flexDirection:'column', display: 'flex', backgroundColor: 'white', borderTopStyle: 'ridge', borderBottomStyle: 'ridge'}}>\r\n                    {boughtList.length == 0 ? (\r\n                        <div style={{height: '100%', display:'flex', justifyContent: 'center', alignItems:'center', fontSize: 20}}>\r\n                                <h5>You have not chose any dish yet.</h5>\r\n                                <h5>Let's fill up your cart!</h5>\r\n                        </div>\r\n                    ): (\r\n                        <BoughtList boughtList={boughtList}/>\r\n                    )}\r\n                </div>\r\n\r\n                <div style={{height:'29.3%', backgroundColor: 'white', paddingLeft: 10, paddingRight: 10}}>\r\n                    <div style={{height: '60%', backgroundColor: 'white', display: 'flex', flexDirection:'row', paddingLeft: 10, paddingRight: 10}}>\r\n                        <div style={{width: '50%', backgroundColor: 'white', display: 'flex', flexDirection: 'column'}}>\r\n                            <text style={{backgroundColor: 'white', fontSize: 22, fontWeight: 'bold'}}> Cost </text>\r\n                            <text style={{backgroundColor: 'white', fontSize: 22, fontWeight: 'bold', marginTop: 50}}> Total </text>\r\n                        </div>\r\n                        \r\n                        \r\n                        \r\n                        <div style={{width: '50%', flexDirection: 'column', display: 'flex', alignItems:'end'}}>\r\n                            <text style={{color: 'tomato', fontSize: 35, fontWeight: 'bold'}}> $ {Math.abs(cost.toFixed(2))} </text>\r\n                            <text style={{backgroundColor: 'white', fontSize: 15, fontWeight: 'bold'}}> ( Tax 10%: {Math.abs(tax.toFixed(2))} )  </text>\r\n                            <text style={{color: 'tomato', fontSize: 35, fontWeight: 'bold'}}> $ {Math.abs(totalAmount.toFixed(2))} </text>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{height: '30%', backgroundColor: 'white'}}>\r\n                        <button style={{width: '100%', height: '100%', backgroundColor: 'red', borderRadius: 20}}\r\n                            onClick={handleClickPayment}\r\n                        >\r\n                            <h1 style={{color: 'white'}}> PAYMENT </h1>\r\n                        </button>\r\n                    </div>\r\n                    </div> */}\r\n            </div>\r\n\r\n            {/* Open the backdrop for dish item */}\r\n            {/* {\r\n                selectedDishes.length > 0 && \r\n                <DishModel \r\n                    selectedImg={selectedDish.img} \r\n                    setSelectedImg={setSelectedDish} \r\n                    name={selectedDish.name}\r\n                    price={selectedDish.price}\r\n                />\r\n            } */}\r\n\r\n            {/* Open the backdrop for payment */}\r\n            {/* {\r\n                isPaid && \r\n                <PaymentModel />\r\n            } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuSection;\r\n"]},"metadata":{},"sourceType":"module"}