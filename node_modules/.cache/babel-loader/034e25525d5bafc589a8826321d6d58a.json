{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\React JS\\\\POS\\\\src\\\\screens\\\\SignUpScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Form, Card, Button, Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignUpScreen() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    signup\n  } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigation = useNavigate();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (passwordRef.current.value === '' || passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError('Passwords do not match');\n    }\n\n    try {\n      setError('');\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n      navigation.push('/');\n    } catch (e) {\n      setError('Failed to create an account');\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"text-center mb-4\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password-confirm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordConfirmRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            class: \"w-100 \",\n            type: \"submit\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SignUpScreen, \"j2/juO6BAj6BaAc47Z0VSLf6cAA=\", false, function () {\n  return [useAuth, useNavigate];\n});\n\n_c = SignUpScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpScreen\");","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Máy tính/React JS/POS/src/screens/SignUpScreen.js"],"names":["React","useRef","useState","Form","Card","Button","Alert","useAuth","Link","useNavigate","SignUpScreen","emailRef","passwordRef","passwordConfirmRef","signup","error","setError","loading","setLoading","navigation","handleSubmit","e","preventDefault","current","value","push"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { Form, Card, Button, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nexport default function SignUpScreen() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n\r\n    const { signup } = useAuth()\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const navigation = useNavigate()\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if(passwordRef.current.value === '' || passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            navigation.push('/')\r\n\r\n        } catch (e) {\r\n            setError('Failed to create an account')\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title className='text-center mb-4'>Sign Up</Card.Title>\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type='email' ref={emailRef} required/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type='password' ref={passwordRef} required/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id='password-confirm'>\r\n                            <Form.Label>Password confirm</Form.Label>\r\n                            <Form.Control type='password' ref={passwordConfirmRef} required/>\r\n                        </Form.Group>\r\n\r\n                        <Button disabled={loading} class='w-100 ' type='submit'>Sign Up</Button>\r\n                    </Form>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n            <div className='w-100 text-center mt-2'>\r\n                Already have an account? <Link to='/login'>Log in</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}