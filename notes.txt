    const menusRef = collection(db, "menus");

    useEffect(
        () => {
            console.log('Hi');
    
            const queryMenus = async () => {
                const menus = await getDocs(menusRef);
    
                setMenus( menus.docs.map( menu => {
                  var list = []
    
                  const queryDishes = async () => {
                    const dishesRef = collection(db, 'menus' + '/' + menu.id + '/' + 'dishes');
                    const dishes = await getDocs(dishesRef);
                    const list = dishes.docs.map( dish => ({...dish.data(), id: dish.id}))
                    return list;
                  }
                  queryDishes().then( dishes => dishes.forEach( dish => list.push(dish) )).catch( e => console.log(e.message))
    
                  // console.log('Menu', menu.data(), 'contains', list);
                  return {...menu.data(), id: menu.id, dishes: list}
                }))
                
                // console.log('List :', list);
                // setMenus( list.map( item => item ) )
            }
    
            console.log('Menus:', menus)
            queryMenus();
            setDishBars( cutList(selectedDishes) );
        }
    , [])

      useEffect(
    () => {

        if (menus.length == 0) {
            const getMenus = async () => {
                const data = await getDocs(menusRef);
    
                data.docs.forEach(
                    menu => {
    
                    const getDishes = async () => {
                        var dishesRef = collection(db, 'menus' + '/' + menu.id + '/' + 'dishes');
                        const dishes = await getDocs(dishesRef);
    
                        console.log('Adding at menu id', menu.id);
                        const dishesList = dishes.docs.map( dish => ({...dish.data(), id: dish.id}));
    
                        setMenus(
                        (prevList) => ([...prevList, {...menu.data(), id: menu.id, dishes: dishesList}])
                        )
                    }
    
                    getDishes();
                    }
                )
            }
    
            console.log('Menu section re-render.');
    
            getMenus();
        }
        // setDishBars( cutList(selectedDishes) );
        
    }
  , [refreshCount])

    const menus = {menus};